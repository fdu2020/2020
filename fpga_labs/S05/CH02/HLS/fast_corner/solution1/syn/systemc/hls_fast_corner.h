// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hls_fast_corner_HH_
#define _hls_fast_corner_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AXIvideo2Mat.h"
#include "Duplicate.h"
#include "CvtColor.h"
#include "FAST_t_opr.h"
#include "Dilate.h"
#include "PaintMask.h"
#include "Mat2AXIvideo.h"
#include "fifo_w8_d2_A.h"
#include "fifo_w8_d20000_A.h"
#include "start_for_DuplicaqcK.h"
#include "start_for_CvtColorcU.h"
#include "start_for_PaintMasc4.h"
#include "start_for_FAST_t_tde.h"
#include "start_for_Dilate_U0.h"
#include "start_for_Mat2AXIudo.h"

namespace ap_rtl {

struct hls_fast_corner : public sc_module {
    // Port declarations 27
    sc_in< sc_lv<32> > INPUT_STREAM_TDATA;
    sc_in< sc_lv<4> > INPUT_STREAM_TKEEP;
    sc_in< sc_lv<4> > INPUT_STREAM_TSTRB;
    sc_in< sc_lv<1> > INPUT_STREAM_TUSER;
    sc_in< sc_lv<1> > INPUT_STREAM_TLAST;
    sc_in< sc_lv<1> > INPUT_STREAM_TID;
    sc_in< sc_lv<1> > INPUT_STREAM_TDEST;
    sc_out< sc_lv<32> > OUTPUT_STREAM_TDATA;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TKEEP;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TSTRB;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TUSER;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TLAST;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TID;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TDEST;
    sc_in< sc_lv<32> > rows;
    sc_in< sc_lv<32> > cols;
    sc_in< sc_lv<32> > threhold;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > INPUT_STREAM_TVALID;
    sc_out< sc_logic > INPUT_STREAM_TREADY;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > OUTPUT_STREAM_TVALID;
    sc_in< sc_logic > OUTPUT_STREAM_TREADY;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    hls_fast_corner(sc_module_name name);
    SC_HAS_PROCESS(hls_fast_corner);

    ~hls_fast_corner();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    AXIvideo2Mat* AXIvideo2Mat_U0;
    Duplicate* Duplicate_U0;
    CvtColor* CvtColor_U0;
    FAST_t_opr* FAST_t_opr_U0;
    Dilate* Dilate_U0;
    PaintMask* PaintMask_U0;
    Mat2AXIvideo* Mat2AXIvideo_U0;
    fifo_w8_d2_A* p_src_data_stream_0_s_U;
    fifo_w8_d2_A* p_src_data_stream_1_s_U;
    fifo_w8_d2_A* p_src_data_stream_2_s_U;
    fifo_w8_d2_A* src0_data_stream_0_s_U;
    fifo_w8_d2_A* src0_data_stream_1_s_U;
    fifo_w8_d2_A* src0_data_stream_2_s_U;
    fifo_w8_d20000_A* src1_data_stream_0_s_U;
    fifo_w8_d20000_A* src1_data_stream_1_s_U;
    fifo_w8_d20000_A* src1_data_stream_2_s_U;
    fifo_w8_d2_A* gray_data_stream_0_s_U;
    fifo_w8_d2_A* mask_data_stream_0_s_U;
    fifo_w8_d2_A* dmask_data_stream_0_U;
    fifo_w8_d2_A* p_dst_data_stream_0_s_U;
    fifo_w8_d2_A* p_dst_data_stream_1_s_U;
    fifo_w8_d2_A* p_dst_data_stream_2_s_U;
    start_for_DuplicaqcK* start_for_DuplicaqcK_U;
    start_for_CvtColorcU* start_for_CvtColorcU_U;
    start_for_PaintMasc4* start_for_PaintMasc4_U;
    start_for_FAST_t_tde* start_for_FAST_t_tde_U;
    start_for_Dilate_U0* start_for_Dilate_U0_U;
    start_for_Mat2AXIudo* start_for_Mat2AXIudo_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_start;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_done;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_continue;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_idle;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_ready;
    sc_signal< sc_logic > AXIvideo2Mat_U0_start_out;
    sc_signal< sc_logic > AXIvideo2Mat_U0_start_write;
    sc_signal< sc_logic > AXIvideo2Mat_U0_INPUT_STREAM_TREADY;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_img_data_stream_0_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_data_stream_0_V_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_img_data_stream_1_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_data_stream_1_V_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_img_data_stream_2_V_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_img_data_stream_2_V_write;
    sc_signal< sc_logic > Duplicate_U0_ap_start;
    sc_signal< sc_logic > Duplicate_U0_start_full_n;
    sc_signal< sc_logic > Duplicate_U0_ap_done;
    sc_signal< sc_logic > Duplicate_U0_ap_continue;
    sc_signal< sc_logic > Duplicate_U0_ap_idle;
    sc_signal< sc_logic > Duplicate_U0_ap_ready;
    sc_signal< sc_logic > Duplicate_U0_start_out;
    sc_signal< sc_logic > Duplicate_U0_start_write;
    sc_signal< sc_logic > Duplicate_U0_src_data_stream_0_V_read;
    sc_signal< sc_logic > Duplicate_U0_src_data_stream_1_V_read;
    sc_signal< sc_logic > Duplicate_U0_src_data_stream_2_V_read;
    sc_signal< sc_lv<8> > Duplicate_U0_dst1_data_stream_0_V_din;
    sc_signal< sc_logic > Duplicate_U0_dst1_data_stream_0_V_write;
    sc_signal< sc_lv<8> > Duplicate_U0_dst1_data_stream_1_V_din;
    sc_signal< sc_logic > Duplicate_U0_dst1_data_stream_1_V_write;
    sc_signal< sc_lv<8> > Duplicate_U0_dst1_data_stream_2_V_din;
    sc_signal< sc_logic > Duplicate_U0_dst1_data_stream_2_V_write;
    sc_signal< sc_lv<8> > Duplicate_U0_dst2_data_stream_0_V_din;
    sc_signal< sc_logic > Duplicate_U0_dst2_data_stream_0_V_write;
    sc_signal< sc_lv<8> > Duplicate_U0_dst2_data_stream_1_V_din;
    sc_signal< sc_logic > Duplicate_U0_dst2_data_stream_1_V_write;
    sc_signal< sc_lv<8> > Duplicate_U0_dst2_data_stream_2_V_din;
    sc_signal< sc_logic > Duplicate_U0_dst2_data_stream_2_V_write;
    sc_signal< sc_logic > CvtColor_U0_ap_start;
    sc_signal< sc_logic > CvtColor_U0_ap_done;
    sc_signal< sc_logic > CvtColor_U0_ap_continue;
    sc_signal< sc_logic > CvtColor_U0_ap_idle;
    sc_signal< sc_logic > CvtColor_U0_ap_ready;
    sc_signal< sc_logic > CvtColor_U0_start_out;
    sc_signal< sc_logic > CvtColor_U0_start_write;
    sc_signal< sc_logic > CvtColor_U0_p_src_data_stream_0_V_read;
    sc_signal< sc_logic > CvtColor_U0_p_src_data_stream_1_V_read;
    sc_signal< sc_logic > CvtColor_U0_p_src_data_stream_2_V_read;
    sc_signal< sc_lv<8> > CvtColor_U0_p_dst_data_stream_V_din;
    sc_signal< sc_logic > CvtColor_U0_p_dst_data_stream_V_write;
    sc_signal< sc_logic > FAST_t_opr_U0_ap_start;
    sc_signal< sc_logic > FAST_t_opr_U0_ap_done;
    sc_signal< sc_logic > FAST_t_opr_U0_ap_continue;
    sc_signal< sc_logic > FAST_t_opr_U0_ap_idle;
    sc_signal< sc_logic > FAST_t_opr_U0_ap_ready;
    sc_signal< sc_logic > FAST_t_opr_U0_start_out;
    sc_signal< sc_logic > FAST_t_opr_U0_start_write;
    sc_signal< sc_logic > FAST_t_opr_U0_p_src_data_stream_V_read;
    sc_signal< sc_lv<8> > FAST_t_opr_U0_p_mask_data_stream_V_din;
    sc_signal< sc_logic > FAST_t_opr_U0_p_mask_data_stream_V_write;
    sc_signal< sc_logic > Dilate_U0_ap_start;
    sc_signal< sc_logic > Dilate_U0_ap_done;
    sc_signal< sc_logic > Dilate_U0_ap_continue;
    sc_signal< sc_logic > Dilate_U0_ap_idle;
    sc_signal< sc_logic > Dilate_U0_ap_ready;
    sc_signal< sc_logic > Dilate_U0_p_src_data_stream_V_read;
    sc_signal< sc_lv<8> > Dilate_U0_p_dst_data_stream_V_din;
    sc_signal< sc_logic > Dilate_U0_p_dst_data_stream_V_write;
    sc_signal< sc_logic > PaintMask_U0_ap_start;
    sc_signal< sc_logic > PaintMask_U0_ap_done;
    sc_signal< sc_logic > PaintMask_U0_ap_continue;
    sc_signal< sc_logic > PaintMask_U0_ap_idle;
    sc_signal< sc_logic > PaintMask_U0_ap_ready;
    sc_signal< sc_logic > PaintMask_U0_start_out;
    sc_signal< sc_logic > PaintMask_U0_start_write;
    sc_signal< sc_logic > PaintMask_U0_p_src_data_stream_0_V_read;
    sc_signal< sc_logic > PaintMask_U0_p_src_data_stream_1_V_read;
    sc_signal< sc_logic > PaintMask_U0_p_src_data_stream_2_V_read;
    sc_signal< sc_logic > PaintMask_U0_p_mask_data_stream_V_read;
    sc_signal< sc_lv<8> > PaintMask_U0_p_dst_data_stream_0_V_din;
    sc_signal< sc_logic > PaintMask_U0_p_dst_data_stream_0_V_write;
    sc_signal< sc_lv<8> > PaintMask_U0_p_dst_data_stream_1_V_din;
    sc_signal< sc_logic > PaintMask_U0_p_dst_data_stream_1_V_write;
    sc_signal< sc_lv<8> > PaintMask_U0_p_dst_data_stream_2_V_din;
    sc_signal< sc_logic > PaintMask_U0_p_dst_data_stream_2_V_write;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_start;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_done;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_continue;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_idle;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_ready;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_data_stream_0_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_data_stream_1_V_read;
    sc_signal< sc_logic > Mat2AXIvideo_U0_img_data_stream_2_V_read;
    sc_signal< sc_lv<32> > Mat2AXIvideo_U0_OUTPUT_STREAM_TDATA;
    sc_signal< sc_logic > Mat2AXIvideo_U0_OUTPUT_STREAM_TVALID;
    sc_signal< sc_lv<4> > Mat2AXIvideo_U0_OUTPUT_STREAM_TKEEP;
    sc_signal< sc_lv<4> > Mat2AXIvideo_U0_OUTPUT_STREAM_TSTRB;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_OUTPUT_STREAM_TUSER;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_OUTPUT_STREAM_TLAST;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_OUTPUT_STREAM_TID;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_OUTPUT_STREAM_TDEST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > p_src_data_stream_0_s_full_n;
    sc_signal< sc_lv<8> > p_src_data_stream_0_s_dout;
    sc_signal< sc_logic > p_src_data_stream_0_s_empty_n;
    sc_signal< sc_logic > p_src_data_stream_1_s_full_n;
    sc_signal< sc_lv<8> > p_src_data_stream_1_s_dout;
    sc_signal< sc_logic > p_src_data_stream_1_s_empty_n;
    sc_signal< sc_logic > p_src_data_stream_2_s_full_n;
    sc_signal< sc_lv<8> > p_src_data_stream_2_s_dout;
    sc_signal< sc_logic > p_src_data_stream_2_s_empty_n;
    sc_signal< sc_logic > src0_data_stream_0_s_full_n;
    sc_signal< sc_lv<8> > src0_data_stream_0_s_dout;
    sc_signal< sc_logic > src0_data_stream_0_s_empty_n;
    sc_signal< sc_logic > src0_data_stream_1_s_full_n;
    sc_signal< sc_lv<8> > src0_data_stream_1_s_dout;
    sc_signal< sc_logic > src0_data_stream_1_s_empty_n;
    sc_signal< sc_logic > src0_data_stream_2_s_full_n;
    sc_signal< sc_lv<8> > src0_data_stream_2_s_dout;
    sc_signal< sc_logic > src0_data_stream_2_s_empty_n;
    sc_signal< sc_logic > src1_data_stream_0_s_full_n;
    sc_signal< sc_lv<8> > src1_data_stream_0_s_dout;
    sc_signal< sc_logic > src1_data_stream_0_s_empty_n;
    sc_signal< sc_logic > src1_data_stream_1_s_full_n;
    sc_signal< sc_lv<8> > src1_data_stream_1_s_dout;
    sc_signal< sc_logic > src1_data_stream_1_s_empty_n;
    sc_signal< sc_logic > src1_data_stream_2_s_full_n;
    sc_signal< sc_lv<8> > src1_data_stream_2_s_dout;
    sc_signal< sc_logic > src1_data_stream_2_s_empty_n;
    sc_signal< sc_logic > gray_data_stream_0_s_full_n;
    sc_signal< sc_lv<8> > gray_data_stream_0_s_dout;
    sc_signal< sc_logic > gray_data_stream_0_s_empty_n;
    sc_signal< sc_logic > mask_data_stream_0_s_full_n;
    sc_signal< sc_lv<8> > mask_data_stream_0_s_dout;
    sc_signal< sc_logic > mask_data_stream_0_s_empty_n;
    sc_signal< sc_logic > dmask_data_stream_0_full_n;
    sc_signal< sc_lv<8> > dmask_data_stream_0_dout;
    sc_signal< sc_logic > dmask_data_stream_0_empty_n;
    sc_signal< sc_logic > p_dst_data_stream_0_s_full_n;
    sc_signal< sc_lv<8> > p_dst_data_stream_0_s_dout;
    sc_signal< sc_logic > p_dst_data_stream_0_s_empty_n;
    sc_signal< sc_logic > p_dst_data_stream_1_s_full_n;
    sc_signal< sc_lv<8> > p_dst_data_stream_1_s_dout;
    sc_signal< sc_logic > p_dst_data_stream_1_s_empty_n;
    sc_signal< sc_logic > p_dst_data_stream_2_s_full_n;
    sc_signal< sc_lv<8> > p_dst_data_stream_2_s_dout;
    sc_signal< sc_logic > p_dst_data_stream_2_s_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_Duplicate_U0_din;
    sc_signal< sc_logic > start_for_Duplicate_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Duplicate_U0_dout;
    sc_signal< sc_logic > start_for_Duplicate_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_CvtColor_U0_din;
    sc_signal< sc_logic > start_for_CvtColor_U0_full_n;
    sc_signal< sc_lv<1> > start_for_CvtColor_U0_dout;
    sc_signal< sc_logic > start_for_CvtColor_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_PaintMask_U0_din;
    sc_signal< sc_logic > start_for_PaintMask_U0_full_n;
    sc_signal< sc_lv<1> > start_for_PaintMask_U0_dout;
    sc_signal< sc_logic > start_for_PaintMask_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_FAST_t_opr_U0_din;
    sc_signal< sc_logic > start_for_FAST_t_opr_U0_full_n;
    sc_signal< sc_lv<1> > start_for_FAST_t_opr_U0_dout;
    sc_signal< sc_logic > start_for_FAST_t_opr_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Dilate_U0_din;
    sc_signal< sc_logic > start_for_Dilate_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Dilate_U0_dout;
    sc_signal< sc_logic > start_for_Dilate_U0_empty_n;
    sc_signal< sc_logic > Dilate_U0_start_full_n;
    sc_signal< sc_logic > Dilate_U0_start_write;
    sc_signal< sc_lv<1> > start_for_Mat2AXIvideo_U0_din;
    sc_signal< sc_logic > start_for_Mat2AXIvideo_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Mat2AXIvideo_U0_dout;
    sc_signal< sc_logic > start_for_Mat2AXIvideo_U0_empty_n;
    sc_signal< sc_logic > Mat2AXIvideo_U0_start_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_U0_start_write;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_AXIvideo2Mat_U0_ap_continue();
    void thread_AXIvideo2Mat_U0_ap_start();
    void thread_CvtColor_U0_ap_continue();
    void thread_CvtColor_U0_ap_start();
    void thread_Dilate_U0_ap_continue();
    void thread_Dilate_U0_ap_start();
    void thread_Dilate_U0_start_full_n();
    void thread_Dilate_U0_start_write();
    void thread_Duplicate_U0_ap_continue();
    void thread_Duplicate_U0_ap_start();
    void thread_Duplicate_U0_start_full_n();
    void thread_FAST_t_opr_U0_ap_continue();
    void thread_FAST_t_opr_U0_ap_start();
    void thread_INPUT_STREAM_TREADY();
    void thread_Mat2AXIvideo_U0_ap_continue();
    void thread_Mat2AXIvideo_U0_ap_start();
    void thread_Mat2AXIvideo_U0_start_full_n();
    void thread_Mat2AXIvideo_U0_start_write();
    void thread_OUTPUT_STREAM_TDATA();
    void thread_OUTPUT_STREAM_TDEST();
    void thread_OUTPUT_STREAM_TID();
    void thread_OUTPUT_STREAM_TKEEP();
    void thread_OUTPUT_STREAM_TLAST();
    void thread_OUTPUT_STREAM_TSTRB();
    void thread_OUTPUT_STREAM_TUSER();
    void thread_OUTPUT_STREAM_TVALID();
    void thread_PaintMask_U0_ap_continue();
    void thread_PaintMask_U0_ap_start();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_start_for_CvtColor_U0_din();
    void thread_start_for_Dilate_U0_din();
    void thread_start_for_Duplicate_U0_din();
    void thread_start_for_FAST_t_opr_U0_din();
    void thread_start_for_Mat2AXIvideo_U0_din();
    void thread_start_for_PaintMask_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

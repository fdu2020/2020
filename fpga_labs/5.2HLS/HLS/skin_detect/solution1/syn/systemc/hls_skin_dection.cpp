// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "hls_skin_dection.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic hls_skin_dection::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic hls_skin_dection::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> hls_skin_dection::ap_ST_fsm_state1 = "1";
const sc_lv<6> hls_skin_dection::ap_ST_fsm_state2 = "10";
const sc_lv<6> hls_skin_dection::ap_ST_fsm_state3 = "100";
const sc_lv<6> hls_skin_dection::ap_ST_fsm_state4 = "1000";
const sc_lv<6> hls_skin_dection::ap_ST_fsm_state5 = "10000";
const sc_lv<6> hls_skin_dection::ap_ST_fsm_state6 = "100000";
const sc_lv<32> hls_skin_dection::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> hls_skin_dection::ap_const_lv32_2 = "10";
const sc_lv<1> hls_skin_dection::ap_const_lv1_1 = "1";
const sc_lv<32> hls_skin_dection::ap_const_lv32_5 = "101";
const sc_lv<32> hls_skin_dection::ap_const_lv32_1 = "1";
const sc_lv<32> hls_skin_dection::ap_const_lv32_3 = "11";
const sc_lv<32> hls_skin_dection::ap_const_lv32_4 = "100";
const sc_lv<31> hls_skin_dection::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<1> hls_skin_dection::ap_const_lv1_0 = "0";
const sc_lv<31> hls_skin_dection::ap_const_lv31_1 = "1";
const sc_lv<15> hls_skin_dection::ap_const_lv15_4C = "1001100";
const sc_lv<7> hls_skin_dection::ap_const_lv7_0 = "0000000";
const sc_lv<32> hls_skin_dection::ap_const_lv32_8 = "1000";
const sc_lv<32> hls_skin_dection::ap_const_lv32_F = "1111";
const sc_lv<8> hls_skin_dection::ap_const_lv8_80 = "10000000";
const sc_lv<8> hls_skin_dection::ap_const_lv8_FF = "11111111";
const sc_lv<14> hls_skin_dection::ap_const_lv14_1D = "11101";
const sc_lv<15> hls_skin_dection::ap_const_lv15_7FD5 = "111111111010101";
const sc_lv<16> hls_skin_dection::ap_const_lv16_FFAB = "1111111110101011";
const sc_lv<16> hls_skin_dection::ap_const_lv16_FF95 = "1111111110010101";
const sc_lv<14> hls_skin_dection::ap_const_lv14_3FEB = "11111111101011";
const sc_lv<16> hls_skin_dection::ap_const_lv16_96 = "10010110";
const bool hls_skin_dection::ap_const_boolean_1 = true;

hls_skin_dection::hls_skin_dection(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ImgProcess_Top_mabkb_U31 = new ImgProcess_Top_mabkb<1,1,8,6,15,15>("ImgProcess_Top_mabkb_U31");
    ImgProcess_Top_mabkb_U31->din0(grp_fu_557_p0);
    ImgProcess_Top_mabkb_U31->din1(grp_fu_557_p1);
    ImgProcess_Top_mabkb_U31->din2(grp_fu_557_p2);
    ImgProcess_Top_mabkb_U31->dout(grp_fu_557_p3);
    ImgProcess_Top_macud_U32 = new ImgProcess_Top_macud<1,1,8,7,15,16>("ImgProcess_Top_macud_U32");
    ImgProcess_Top_macud_U32->din0(grp_fu_565_p0);
    ImgProcess_Top_macud_U32->din1(grp_fu_565_p1);
    ImgProcess_Top_macud_U32->din2(grp_fu_565_p2);
    ImgProcess_Top_macud_U32->dout(grp_fu_565_p3);
    ImgProcess_Top_madEe_U33 = new ImgProcess_Top_madEe<1,1,8,8,16,16>("ImgProcess_Top_madEe_U33");
    ImgProcess_Top_madEe_U33->din0(grp_fu_573_p0);
    ImgProcess_Top_madEe_U33->din1(grp_fu_573_p1);
    ImgProcess_Top_madEe_U33->din2(grp_fu_565_p3);
    ImgProcess_Top_madEe_U33->dout(grp_fu_573_p3);
    ImgProcess_Top_madEe_U34 = new ImgProcess_Top_madEe<1,1,8,8,16,16>("ImgProcess_Top_madEe_U34");
    ImgProcess_Top_madEe_U34->din0(grp_fu_582_p0);
    ImgProcess_Top_madEe_U34->din1(grp_fu_582_p1);
    ImgProcess_Top_madEe_U34->din2(grp_fu_590_p3);
    ImgProcess_Top_madEe_U34->dout(grp_fu_582_p3);
    ImgProcess_Top_maeOg_U35 = new ImgProcess_Top_maeOg<1,1,8,6,15,16>("ImgProcess_Top_maeOg_U35");
    ImgProcess_Top_maeOg_U35->din0(grp_fu_590_p0);
    ImgProcess_Top_maeOg_U35->din1(grp_fu_590_p1);
    ImgProcess_Top_maeOg_U35->din2(grp_fu_590_p2);
    ImgProcess_Top_maeOg_U35->dout(grp_fu_590_p3);
    ImgProcess_Top_mafYi_U36 = new ImgProcess_Top_mafYi<1,1,8,9,15,16>("ImgProcess_Top_mafYi_U36");
    ImgProcess_Top_mafYi_U36->din0(grp_fu_599_p0);
    ImgProcess_Top_mafYi_U36->din1(grp_fu_599_p1);
    ImgProcess_Top_mafYi_U36->din2(grp_fu_599_p2);
    ImgProcess_Top_mafYi_U36->dout(grp_fu_599_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( tmp_1_i_fu_376_p2 );

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_361_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_361_p2 );

    SC_METHOD(thread_cb_fu_454_p2);
    sensitive << ( tmp_17_i_reg_693 );

    SC_METHOD(thread_cb_lower_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cb_lower_empty_n );

    SC_METHOD(thread_cb_lower_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_cb_upper_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cb_upper_empty_n );

    SC_METHOD(thread_cb_upper_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_col_cast_i_fu_372_p1);
    sensitive << ( col_i_reg_346 );

    SC_METHOD(thread_col_fu_381_p2);
    sensitive << ( col_i_reg_346 );

    SC_METHOD(thread_cols_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cols_empty_n );

    SC_METHOD(thread_cols_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_cr_fu_459_p2);
    sensitive << ( tmp_24_i_reg_698 );

    SC_METHOD(thread_cr_lower_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cr_lower_empty_n );

    SC_METHOD(thread_cr_lower_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_cr_upper_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_cr_upper_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_dst_data_stream_0_V_blk_n);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_dst_data_stream_0_V_din);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_3_reg_663 );
    sensitive << ( sel_tmp1_reg_703 );

    SC_METHOD(thread_dst_data_stream_0_V_write);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_dst_data_stream_1_V_blk_n);
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_dst_data_stream_1_V_din);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_4_reg_670 );
    sensitive << ( sel_tmp1_reg_703 );

    SC_METHOD(thread_dst_data_stream_1_V_write);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_dst_data_stream_2_V_blk_n);
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_dst_data_stream_2_V_din);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_5_reg_676 );
    sensitive << ( sel_tmp1_reg_703 );

    SC_METHOD(thread_dst_data_stream_2_V_write);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_557_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast64_i_fu_399_p1 );

    SC_METHOD(thread_grp_fu_557_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_557_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_i_fu_390_p0 );

    SC_METHOD(thread_grp_fu_565_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_4_cast65_i_fu_387_p1 );

    SC_METHOD(thread_grp_fu_565_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_565_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_565_p20 );

    SC_METHOD(thread_grp_fu_565_p20);
    sensitive << ( tmp_11_i_fu_402_p3 );

    SC_METHOD(thread_grp_fu_573_p0);
    sensitive << ( tmp_6_cast_i_fu_396_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_573_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_582_p0);
    sensitive << ( tmp_6_cast_i_fu_396_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_582_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_590_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_cast64_i_fu_399_p1 );

    SC_METHOD(thread_grp_fu_590_p1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_590_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_590_p20 );

    SC_METHOD(thread_grp_fu_590_p20);
    sensitive << ( tmp_18_i_fu_422_p3 );

    SC_METHOD(thread_grp_fu_599_p0);
    sensitive << ( tmp_6_cast_i_reg_683 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_599_p1);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_599_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_fu_599_p20 );

    SC_METHOD(thread_grp_fu_599_p20);
    sensitive << ( tmp3_reg_688 );

    SC_METHOD(thread_row_cast_i_fu_357_p1);
    sensitive << ( row_i_reg_335 );

    SC_METHOD(thread_row_fu_366_p2);
    sensitive << ( row_i_reg_335 );

    SC_METHOD(thread_rows_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );

    SC_METHOD(thread_rows_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_sel_tmp1_fu_530_p2);
    sensitive << ( tmp2_fu_524_p2 );
    sensitive << ( tmp8_fu_512_p2 );

    SC_METHOD(thread_src_data_stream_0_V_blk_n);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_376_p2 );

    SC_METHOD(thread_src_data_stream_0_V_read);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_376_p2 );

    SC_METHOD(thread_src_data_stream_1_V_blk_n);
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_376_p2 );

    SC_METHOD(thread_src_data_stream_1_V_read);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_376_p2 );

    SC_METHOD(thread_src_data_stream_2_V_blk_n);
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_376_p2 );

    SC_METHOD(thread_src_data_stream_2_V_read);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_376_p2 );

    SC_METHOD(thread_tmp1_fu_518_p2);
    sensitive << ( tmp_35_i_fu_501_p2 );
    sensitive << ( tmp_34_i_fu_496_p2 );

    SC_METHOD(thread_tmp2_fu_524_p2);
    sensitive << ( tmp1_fu_518_p2 );
    sensitive << ( tmp_26_i_fu_468_p2 );

    SC_METHOD(thread_tmp8_fu_512_p2);
    sensitive << ( tmp9_fu_506_p2 );
    sensitive << ( tmp_32_i_fu_487_p2 );

    SC_METHOD(thread_tmp9_fu_506_p2);
    sensitive << ( tmp_31_i_fu_482_p2 );
    sensitive << ( tmp_27_i_fu_473_p2 );

    SC_METHOD(thread_tmp_11_i_fu_402_p3);
    sensitive << ( tmp_3_reg_663 );

    SC_METHOD(thread_tmp_18_i_fu_422_p3);
    sensitive << ( tmp_5_reg_676 );

    SC_METHOD(thread_tmp_1_i_fu_376_p2);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_376_p2 );
    sensitive << ( cols_read_reg_612 );
    sensitive << ( col_cast_i_fu_372_p1 );

    SC_METHOD(thread_tmp_25_i_fu_464_p1);
    sensitive << ( y_fu_445_p4 );

    SC_METHOD(thread_tmp_26_i_fu_468_p2);
    sensitive << ( y_lower_read_reg_617 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_25_i_fu_464_p1 );

    SC_METHOD(thread_tmp_27_i_fu_473_p2);
    sensitive << ( y_upper_read_reg_622 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_25_i_fu_464_p1 );

    SC_METHOD(thread_tmp_30_i_fu_478_p1);
    sensitive << ( cb_fu_454_p2 );

    SC_METHOD(thread_tmp_31_i_fu_482_p2);
    sensitive << ( cb_lower_read_reg_627 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_30_i_fu_478_p1 );

    SC_METHOD(thread_tmp_32_i_fu_487_p2);
    sensitive << ( cb_upper_read_reg_632 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_30_i_fu_478_p1 );

    SC_METHOD(thread_tmp_33_i_fu_492_p1);
    sensitive << ( cr_fu_459_p2 );

    SC_METHOD(thread_tmp_34_i_fu_496_p2);
    sensitive << ( cr_lower_read_reg_637 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_33_i_fu_492_p1 );

    SC_METHOD(thread_tmp_35_i_fu_501_p2);
    sensitive << ( cr_upper_read_reg_642 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_33_i_fu_492_p1 );

    SC_METHOD(thread_tmp_4_cast65_i_fu_387_p1);
    sensitive << ( tmp_5_reg_676 );

    SC_METHOD(thread_tmp_5_i_fu_390_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_4_cast65_i_fu_387_p1 );

    SC_METHOD(thread_tmp_6_cast_i_fu_396_p1);
    sensitive << ( tmp_4_reg_670 );

    SC_METHOD(thread_tmp_8_cast64_i_fu_399_p1);
    sensitive << ( tmp_3_reg_663 );

    SC_METHOD(thread_tmp_i_fu_361_p2);
    sensitive << ( rows_read_reg_607 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( row_cast_i_fu_357_p1 );

    SC_METHOD(thread_y_fu_445_p4);
    sensitive << ( grp_fu_599_p3 );

    SC_METHOD(thread_y_lower_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( y_lower_empty_n );

    SC_METHOD(thread_y_lower_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_y_upper_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( y_upper_empty_n );

    SC_METHOD(thread_y_upper_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( rows_empty_n );
    sensitive << ( cols_empty_n );
    sensitive << ( y_lower_empty_n );
    sensitive << ( y_upper_empty_n );
    sensitive << ( cb_lower_empty_n );
    sensitive << ( cb_upper_empty_n );
    sensitive << ( cr_lower_empty_n );
    sensitive << ( cr_upper_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_i_fu_376_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_361_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "hls_skin_dection_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_data_stream_0_V_dout, "(port)src_data_stream_0_V_dout");
    sc_trace(mVcdFile, src_data_stream_0_V_empty_n, "(port)src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_0_V_read, "(port)src_data_stream_0_V_read");
    sc_trace(mVcdFile, src_data_stream_1_V_dout, "(port)src_data_stream_1_V_dout");
    sc_trace(mVcdFile, src_data_stream_1_V_empty_n, "(port)src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_1_V_read, "(port)src_data_stream_1_V_read");
    sc_trace(mVcdFile, src_data_stream_2_V_dout, "(port)src_data_stream_2_V_dout");
    sc_trace(mVcdFile, src_data_stream_2_V_empty_n, "(port)src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_2_V_read, "(port)src_data_stream_2_V_read");
    sc_trace(mVcdFile, dst_data_stream_0_V_din, "(port)dst_data_stream_0_V_din");
    sc_trace(mVcdFile, dst_data_stream_0_V_full_n, "(port)dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_write, "(port)dst_data_stream_0_V_write");
    sc_trace(mVcdFile, dst_data_stream_1_V_din, "(port)dst_data_stream_1_V_din");
    sc_trace(mVcdFile, dst_data_stream_1_V_full_n, "(port)dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_1_V_write, "(port)dst_data_stream_1_V_write");
    sc_trace(mVcdFile, dst_data_stream_2_V_din, "(port)dst_data_stream_2_V_din");
    sc_trace(mVcdFile, dst_data_stream_2_V_full_n, "(port)dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_write, "(port)dst_data_stream_2_V_write");
    sc_trace(mVcdFile, rows_dout, "(port)rows_dout");
    sc_trace(mVcdFile, rows_empty_n, "(port)rows_empty_n");
    sc_trace(mVcdFile, rows_read, "(port)rows_read");
    sc_trace(mVcdFile, cols_dout, "(port)cols_dout");
    sc_trace(mVcdFile, cols_empty_n, "(port)cols_empty_n");
    sc_trace(mVcdFile, cols_read, "(port)cols_read");
    sc_trace(mVcdFile, y_lower_dout, "(port)y_lower_dout");
    sc_trace(mVcdFile, y_lower_empty_n, "(port)y_lower_empty_n");
    sc_trace(mVcdFile, y_lower_read, "(port)y_lower_read");
    sc_trace(mVcdFile, y_upper_dout, "(port)y_upper_dout");
    sc_trace(mVcdFile, y_upper_empty_n, "(port)y_upper_empty_n");
    sc_trace(mVcdFile, y_upper_read, "(port)y_upper_read");
    sc_trace(mVcdFile, cb_lower_dout, "(port)cb_lower_dout");
    sc_trace(mVcdFile, cb_lower_empty_n, "(port)cb_lower_empty_n");
    sc_trace(mVcdFile, cb_lower_read, "(port)cb_lower_read");
    sc_trace(mVcdFile, cb_upper_dout, "(port)cb_upper_dout");
    sc_trace(mVcdFile, cb_upper_empty_n, "(port)cb_upper_empty_n");
    sc_trace(mVcdFile, cb_upper_read, "(port)cb_upper_read");
    sc_trace(mVcdFile, cr_lower_dout, "(port)cr_lower_dout");
    sc_trace(mVcdFile, cr_lower_empty_n, "(port)cr_lower_empty_n");
    sc_trace(mVcdFile, cr_lower_read, "(port)cr_lower_read");
    sc_trace(mVcdFile, cr_upper_dout, "(port)cr_upper_dout");
    sc_trace(mVcdFile, cr_upper_empty_n, "(port)cr_upper_empty_n");
    sc_trace(mVcdFile, cr_upper_read, "(port)cr_upper_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, src_data_stream_0_V_blk_n, "src_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_1_i_fu_376_p2, "tmp_1_i_fu_376_p2");
    sc_trace(mVcdFile, src_data_stream_1_V_blk_n, "src_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, src_data_stream_2_V_blk_n, "src_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_blk_n, "dst_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, dst_data_stream_1_V_blk_n, "dst_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_blk_n, "dst_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, rows_blk_n, "rows_blk_n");
    sc_trace(mVcdFile, cols_blk_n, "cols_blk_n");
    sc_trace(mVcdFile, y_lower_blk_n, "y_lower_blk_n");
    sc_trace(mVcdFile, y_upper_blk_n, "y_upper_blk_n");
    sc_trace(mVcdFile, cb_lower_blk_n, "cb_lower_blk_n");
    sc_trace(mVcdFile, cb_upper_blk_n, "cb_upper_blk_n");
    sc_trace(mVcdFile, cr_lower_blk_n, "cr_lower_blk_n");
    sc_trace(mVcdFile, cr_upper_blk_n, "cr_upper_blk_n");
    sc_trace(mVcdFile, rows_read_reg_607, "rows_read_reg_607");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, cols_read_reg_612, "cols_read_reg_612");
    sc_trace(mVcdFile, y_lower_read_reg_617, "y_lower_read_reg_617");
    sc_trace(mVcdFile, y_upper_read_reg_622, "y_upper_read_reg_622");
    sc_trace(mVcdFile, cb_lower_read_reg_627, "cb_lower_read_reg_627");
    sc_trace(mVcdFile, cb_upper_read_reg_632, "cb_upper_read_reg_632");
    sc_trace(mVcdFile, cr_lower_read_reg_637, "cr_lower_read_reg_637");
    sc_trace(mVcdFile, cr_upper_read_reg_642, "cr_upper_read_reg_642");
    sc_trace(mVcdFile, row_fu_366_p2, "row_fu_366_p2");
    sc_trace(mVcdFile, row_reg_650, "row_reg_650");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, col_fu_381_p2, "col_fu_381_p2");
    sc_trace(mVcdFile, col_reg_658, "col_reg_658");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_3_reg_663, "tmp_3_reg_663");
    sc_trace(mVcdFile, tmp_4_reg_670, "tmp_4_reg_670");
    sc_trace(mVcdFile, tmp_5_reg_676, "tmp_5_reg_676");
    sc_trace(mVcdFile, tmp_6_cast_i_fu_396_p1, "tmp_6_cast_i_fu_396_p1");
    sc_trace(mVcdFile, tmp_6_cast_i_reg_683, "tmp_6_cast_i_reg_683");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_557_p3, "grp_fu_557_p3");
    sc_trace(mVcdFile, tmp3_reg_688, "tmp3_reg_688");
    sc_trace(mVcdFile, tmp_17_i_reg_693, "tmp_17_i_reg_693");
    sc_trace(mVcdFile, tmp_24_i_reg_698, "tmp_24_i_reg_698");
    sc_trace(mVcdFile, sel_tmp1_fu_530_p2, "sel_tmp1_fu_530_p2");
    sc_trace(mVcdFile, sel_tmp1_reg_703, "sel_tmp1_reg_703");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, row_i_reg_335, "row_i_reg_335");
    sc_trace(mVcdFile, col_i_reg_346, "col_i_reg_346");
    sc_trace(mVcdFile, tmp_i_fu_361_p2, "tmp_i_fu_361_p2");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, row_cast_i_fu_357_p1, "row_cast_i_fu_357_p1");
    sc_trace(mVcdFile, col_cast_i_fu_372_p1, "col_cast_i_fu_372_p1");
    sc_trace(mVcdFile, tmp_5_i_fu_390_p0, "tmp_5_i_fu_390_p0");
    sc_trace(mVcdFile, tmp_4_cast65_i_fu_387_p1, "tmp_4_cast65_i_fu_387_p1");
    sc_trace(mVcdFile, tmp_11_i_fu_402_p3, "tmp_11_i_fu_402_p3");
    sc_trace(mVcdFile, grp_fu_573_p3, "grp_fu_573_p3");
    sc_trace(mVcdFile, tmp_18_i_fu_422_p3, "tmp_18_i_fu_422_p3");
    sc_trace(mVcdFile, grp_fu_582_p3, "grp_fu_582_p3");
    sc_trace(mVcdFile, grp_fu_599_p3, "grp_fu_599_p3");
    sc_trace(mVcdFile, y_fu_445_p4, "y_fu_445_p4");
    sc_trace(mVcdFile, tmp_25_i_fu_464_p1, "tmp_25_i_fu_464_p1");
    sc_trace(mVcdFile, cb_fu_454_p2, "cb_fu_454_p2");
    sc_trace(mVcdFile, tmp_30_i_fu_478_p1, "tmp_30_i_fu_478_p1");
    sc_trace(mVcdFile, cr_fu_459_p2, "cr_fu_459_p2");
    sc_trace(mVcdFile, tmp_33_i_fu_492_p1, "tmp_33_i_fu_492_p1");
    sc_trace(mVcdFile, tmp_31_i_fu_482_p2, "tmp_31_i_fu_482_p2");
    sc_trace(mVcdFile, tmp_27_i_fu_473_p2, "tmp_27_i_fu_473_p2");
    sc_trace(mVcdFile, tmp9_fu_506_p2, "tmp9_fu_506_p2");
    sc_trace(mVcdFile, tmp_32_i_fu_487_p2, "tmp_32_i_fu_487_p2");
    sc_trace(mVcdFile, tmp_35_i_fu_501_p2, "tmp_35_i_fu_501_p2");
    sc_trace(mVcdFile, tmp_34_i_fu_496_p2, "tmp_34_i_fu_496_p2");
    sc_trace(mVcdFile, tmp1_fu_518_p2, "tmp1_fu_518_p2");
    sc_trace(mVcdFile, tmp_26_i_fu_468_p2, "tmp_26_i_fu_468_p2");
    sc_trace(mVcdFile, tmp2_fu_524_p2, "tmp2_fu_524_p2");
    sc_trace(mVcdFile, tmp8_fu_512_p2, "tmp8_fu_512_p2");
    sc_trace(mVcdFile, grp_fu_557_p0, "grp_fu_557_p0");
    sc_trace(mVcdFile, tmp_8_cast64_i_fu_399_p1, "tmp_8_cast64_i_fu_399_p1");
    sc_trace(mVcdFile, grp_fu_557_p1, "grp_fu_557_p1");
    sc_trace(mVcdFile, grp_fu_557_p2, "grp_fu_557_p2");
    sc_trace(mVcdFile, grp_fu_565_p0, "grp_fu_565_p0");
    sc_trace(mVcdFile, grp_fu_565_p1, "grp_fu_565_p1");
    sc_trace(mVcdFile, grp_fu_565_p2, "grp_fu_565_p2");
    sc_trace(mVcdFile, grp_fu_573_p0, "grp_fu_573_p0");
    sc_trace(mVcdFile, grp_fu_573_p1, "grp_fu_573_p1");
    sc_trace(mVcdFile, grp_fu_565_p3, "grp_fu_565_p3");
    sc_trace(mVcdFile, grp_fu_582_p0, "grp_fu_582_p0");
    sc_trace(mVcdFile, grp_fu_582_p1, "grp_fu_582_p1");
    sc_trace(mVcdFile, grp_fu_590_p3, "grp_fu_590_p3");
    sc_trace(mVcdFile, grp_fu_590_p0, "grp_fu_590_p0");
    sc_trace(mVcdFile, grp_fu_590_p1, "grp_fu_590_p1");
    sc_trace(mVcdFile, grp_fu_590_p2, "grp_fu_590_p2");
    sc_trace(mVcdFile, grp_fu_599_p0, "grp_fu_599_p0");
    sc_trace(mVcdFile, grp_fu_599_p1, "grp_fu_599_p1");
    sc_trace(mVcdFile, grp_fu_599_p2, "grp_fu_599_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_565_p20, "grp_fu_565_p20");
    sc_trace(mVcdFile, grp_fu_590_p20, "grp_fu_590_p20");
    sc_trace(mVcdFile, grp_fu_599_p20, "grp_fu_599_p20");
#endif

    }
}

hls_skin_dection::~hls_skin_dection() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ImgProcess_Top_mabkb_U31;
    delete ImgProcess_Top_macud_U32;
    delete ImgProcess_Top_madEe_U33;
    delete ImgProcess_Top_madEe_U34;
    delete ImgProcess_Top_maeOg_U35;
    delete ImgProcess_Top_mafYi_U36;
}

void hls_skin_dection::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_361_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
        col_i_reg_346 = col_reg_658.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_361_p2.read()))) {
        col_i_reg_346 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_0))) {
        row_i_reg_335 = row_reg_650.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        row_i_reg_335 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        cb_lower_read_reg_627 = cb_lower_dout.read();
        cb_upper_read_reg_632 = cb_upper_dout.read();
        cols_read_reg_612 = cols_dout.read();
        cr_lower_read_reg_637 = cr_lower_dout.read();
        cr_upper_read_reg_642 = cr_upper_dout.read();
        rows_read_reg_607 = rows_dout.read();
        y_lower_read_reg_617 = y_lower_dout.read();
        y_upper_read_reg_622 = y_upper_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        col_reg_658 = col_fu_381_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        row_reg_650 = row_fu_366_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sel_tmp1_reg_703 = sel_tmp1_fu_530_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp3_reg_688 = grp_fu_557_p3.read();
        tmp_17_i_reg_693 = grp_fu_573_p3.read().range(15, 8);
        tmp_24_i_reg_698 = grp_fu_582_p3.read().range(15, 8);
        tmp_6_cast_i_reg_683 = tmp_6_cast_i_fu_396_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        tmp_3_reg_663 = src_data_stream_0_V_dout.read();
        tmp_4_reg_670 = src_data_stream_1_V_dout.read();
        tmp_5_reg_676 = src_data_stream_2_V_dout.read();
    }
}

void hls_skin_dection::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void hls_skin_dection::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void hls_skin_dection::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void hls_skin_dection::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void hls_skin_dection::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void hls_skin_dection::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void hls_skin_dection::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read()));
}

void hls_skin_dection::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())));
}

void hls_skin_dection::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read()));
}

void hls_skin_dection::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_361_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void hls_skin_dection::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_361_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_cb_fu_454_p2() {
    cb_fu_454_p2 = (tmp_17_i_reg_693.read() ^ ap_const_lv8_80);
}

void hls_skin_dection::thread_cb_lower_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cb_lower_blk_n = cb_lower_empty_n.read();
    } else {
        cb_lower_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_cb_lower_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        cb_lower_read = ap_const_logic_1;
    } else {
        cb_lower_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_cb_upper_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cb_upper_blk_n = cb_upper_empty_n.read();
    } else {
        cb_upper_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_cb_upper_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        cb_upper_read = ap_const_logic_1;
    } else {
        cb_upper_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_col_cast_i_fu_372_p1() {
    col_cast_i_fu_372_p1 = esl_zext<32,31>(col_i_reg_346.read());
}

void hls_skin_dection::thread_col_fu_381_p2() {
    col_fu_381_p2 = (!col_i_reg_346.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(col_i_reg_346.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void hls_skin_dection::thread_cols_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cols_blk_n = cols_empty_n.read();
    } else {
        cols_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_cols_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        cols_read = ap_const_logic_1;
    } else {
        cols_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_cr_fu_459_p2() {
    cr_fu_459_p2 = (tmp_24_i_reg_698.read() ^ ap_const_lv8_80);
}

void hls_skin_dection::thread_cr_lower_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cr_lower_blk_n = cr_lower_empty_n.read();
    } else {
        cr_lower_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_cr_lower_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        cr_lower_read = ap_const_logic_1;
    } else {
        cr_lower_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_cr_upper_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cr_upper_blk_n = cr_upper_empty_n.read();
    } else {
        cr_upper_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_cr_upper_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        cr_upper_read = ap_const_logic_1;
    } else {
        cr_upper_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_dst_data_stream_0_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        dst_data_stream_0_V_blk_n = dst_data_stream_0_V_full_n.read();
    } else {
        dst_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_dst_data_stream_0_V_din() {
    dst_data_stream_0_V_din = (!sel_tmp1_reg_703.read()[0].is_01())? sc_lv<8>(): ((sel_tmp1_reg_703.read()[0].to_bool())? ap_const_lv8_FF: tmp_3_reg_663.read());
}

void hls_skin_dection::thread_dst_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
        dst_data_stream_0_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_0_V_write = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_dst_data_stream_1_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        dst_data_stream_1_V_blk_n = dst_data_stream_1_V_full_n.read();
    } else {
        dst_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_dst_data_stream_1_V_din() {
    dst_data_stream_1_V_din = (!sel_tmp1_reg_703.read()[0].is_01())? sc_lv<8>(): ((sel_tmp1_reg_703.read()[0].to_bool())? ap_const_lv8_FF: tmp_4_reg_670.read());
}

void hls_skin_dection::thread_dst_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
        dst_data_stream_1_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_1_V_write = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_dst_data_stream_2_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        dst_data_stream_2_V_blk_n = dst_data_stream_2_V_full_n.read();
    } else {
        dst_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_dst_data_stream_2_V_din() {
    dst_data_stream_2_V_din = (!sel_tmp1_reg_703.read()[0].is_01())? sc_lv<8>(): ((sel_tmp1_reg_703.read()[0].to_bool())? ap_const_lv8_FF: tmp_5_reg_676.read());
}

void hls_skin_dection::thread_dst_data_stream_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
        dst_data_stream_2_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_2_V_write = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_grp_fu_557_p0() {
    grp_fu_557_p0 =  (sc_lv<8>) (tmp_8_cast64_i_fu_399_p1.read());
}

void hls_skin_dection::thread_grp_fu_557_p1() {
    grp_fu_557_p1 =  (sc_lv<6>) (ap_const_lv14_1D);
}

void hls_skin_dection::thread_grp_fu_557_p2() {
    grp_fu_557_p2 = (!tmp_5_i_fu_390_p0.read().is_01() || !ap_const_lv15_4C.is_01())? sc_lv<15>(): sc_biguint<8>(tmp_5_i_fu_390_p0.read()) * sc_biguint<15>(ap_const_lv15_4C);
}

void hls_skin_dection::thread_grp_fu_565_p0() {
    grp_fu_565_p0 =  (sc_lv<8>) (tmp_4_cast65_i_fu_387_p1.read());
}

void hls_skin_dection::thread_grp_fu_565_p1() {
    grp_fu_565_p1 =  (sc_lv<7>) (ap_const_lv15_7FD5);
}

void hls_skin_dection::thread_grp_fu_565_p2() {
    grp_fu_565_p2 =  (sc_lv<15>) (grp_fu_565_p20.read());
}

void hls_skin_dection::thread_grp_fu_565_p20() {
    grp_fu_565_p20 = esl_zext<16,15>(tmp_11_i_fu_402_p3.read());
}

void hls_skin_dection::thread_grp_fu_573_p0() {
    grp_fu_573_p0 =  (sc_lv<8>) (tmp_6_cast_i_fu_396_p1.read());
}

void hls_skin_dection::thread_grp_fu_573_p1() {
    grp_fu_573_p1 =  (sc_lv<8>) (ap_const_lv16_FFAB);
}

void hls_skin_dection::thread_grp_fu_582_p0() {
    grp_fu_582_p0 =  (sc_lv<8>) (tmp_6_cast_i_fu_396_p1.read());
}

void hls_skin_dection::thread_grp_fu_582_p1() {
    grp_fu_582_p1 =  (sc_lv<8>) (ap_const_lv16_FF95);
}

void hls_skin_dection::thread_grp_fu_590_p0() {
    grp_fu_590_p0 =  (sc_lv<8>) (tmp_8_cast64_i_fu_399_p1.read());
}

void hls_skin_dection::thread_grp_fu_590_p1() {
    grp_fu_590_p1 =  (sc_lv<6>) (ap_const_lv14_3FEB);
}

void hls_skin_dection::thread_grp_fu_590_p2() {
    grp_fu_590_p2 =  (sc_lv<15>) (grp_fu_590_p20.read());
}

void hls_skin_dection::thread_grp_fu_590_p20() {
    grp_fu_590_p20 = esl_zext<16,15>(tmp_18_i_fu_422_p3.read());
}

void hls_skin_dection::thread_grp_fu_599_p0() {
    grp_fu_599_p0 =  (sc_lv<8>) (tmp_6_cast_i_reg_683.read());
}

void hls_skin_dection::thread_grp_fu_599_p1() {
    grp_fu_599_p1 =  (sc_lv<9>) (ap_const_lv16_96);
}

void hls_skin_dection::thread_grp_fu_599_p2() {
    grp_fu_599_p2 =  (sc_lv<15>) (grp_fu_599_p20.read());
}

void hls_skin_dection::thread_grp_fu_599_p20() {
    grp_fu_599_p20 = esl_zext<16,15>(tmp3_reg_688.read());
}

void hls_skin_dection::thread_row_cast_i_fu_357_p1() {
    row_cast_i_fu_357_p1 = esl_zext<32,31>(row_i_reg_335.read());
}

void hls_skin_dection::thread_row_fu_366_p2() {
    row_fu_366_p2 = (!row_i_reg_335.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(row_i_reg_335.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void hls_skin_dection::thread_rows_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        rows_blk_n = rows_empty_n.read();
    } else {
        rows_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_rows_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        rows_read = ap_const_logic_1;
    } else {
        rows_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_sel_tmp1_fu_530_p2() {
    sel_tmp1_fu_530_p2 = (tmp2_fu_524_p2.read() & tmp8_fu_512_p2.read());
}

void hls_skin_dection::thread_src_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1))) {
        src_data_stream_0_V_blk_n = src_data_stream_0_V_empty_n.read();
    } else {
        src_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_src_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_src_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1))) {
        src_data_stream_1_V_blk_n = src_data_stream_1_V_empty_n.read();
    } else {
        src_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_src_data_stream_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        src_data_stream_1_V_read = ap_const_logic_1;
    } else {
        src_data_stream_1_V_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_src_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1))) {
        src_data_stream_2_V_blk_n = src_data_stream_2_V_empty_n.read();
    } else {
        src_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_src_data_stream_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
        src_data_stream_2_V_read = ap_const_logic_1;
    } else {
        src_data_stream_2_V_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_tmp1_fu_518_p2() {
    tmp1_fu_518_p2 = (tmp_35_i_fu_501_p2.read() & tmp_34_i_fu_496_p2.read());
}

void hls_skin_dection::thread_tmp2_fu_524_p2() {
    tmp2_fu_524_p2 = (tmp1_fu_518_p2.read() & tmp_26_i_fu_468_p2.read());
}

void hls_skin_dection::thread_tmp8_fu_512_p2() {
    tmp8_fu_512_p2 = (tmp9_fu_506_p2.read() & tmp_32_i_fu_487_p2.read());
}

void hls_skin_dection::thread_tmp9_fu_506_p2() {
    tmp9_fu_506_p2 = (tmp_31_i_fu_482_p2.read() & tmp_27_i_fu_473_p2.read());
}

void hls_skin_dection::thread_tmp_11_i_fu_402_p3() {
    tmp_11_i_fu_402_p3 = esl_concat<8,7>(tmp_3_reg_663.read(), ap_const_lv7_0);
}

void hls_skin_dection::thread_tmp_18_i_fu_422_p3() {
    tmp_18_i_fu_422_p3 = esl_concat<8,7>(tmp_5_reg_676.read(), ap_const_lv7_0);
}

void hls_skin_dection::thread_tmp_1_i_fu_376_p2() {
    tmp_1_i_fu_376_p2 = (!col_cast_i_fu_372_p1.read().is_01() || !cols_read_reg_612.read().is_01())? sc_lv<1>(): (sc_bigint<32>(col_cast_i_fu_372_p1.read()) < sc_bigint<32>(cols_read_reg_612.read()));
}

void hls_skin_dection::thread_tmp_25_i_fu_464_p1() {
    tmp_25_i_fu_464_p1 = esl_zext<32,8>(y_fu_445_p4.read());
}

void hls_skin_dection::thread_tmp_26_i_fu_468_p2() {
    tmp_26_i_fu_468_p2 = (!tmp_25_i_fu_464_p1.read().is_01() || !y_lower_read_reg_617.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_25_i_fu_464_p1.read()) > sc_bigint<32>(y_lower_read_reg_617.read()));
}

void hls_skin_dection::thread_tmp_27_i_fu_473_p2() {
    tmp_27_i_fu_473_p2 = (!tmp_25_i_fu_464_p1.read().is_01() || !y_upper_read_reg_622.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_25_i_fu_464_p1.read()) < sc_bigint<32>(y_upper_read_reg_622.read()));
}

void hls_skin_dection::thread_tmp_30_i_fu_478_p1() {
    tmp_30_i_fu_478_p1 = esl_zext<32,8>(cb_fu_454_p2.read());
}

void hls_skin_dection::thread_tmp_31_i_fu_482_p2() {
    tmp_31_i_fu_482_p2 = (!tmp_30_i_fu_478_p1.read().is_01() || !cb_lower_read_reg_627.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_30_i_fu_478_p1.read()) > sc_bigint<32>(cb_lower_read_reg_627.read()));
}

void hls_skin_dection::thread_tmp_32_i_fu_487_p2() {
    tmp_32_i_fu_487_p2 = (!tmp_30_i_fu_478_p1.read().is_01() || !cb_upper_read_reg_632.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_30_i_fu_478_p1.read()) < sc_bigint<32>(cb_upper_read_reg_632.read()));
}

void hls_skin_dection::thread_tmp_33_i_fu_492_p1() {
    tmp_33_i_fu_492_p1 = esl_zext<32,8>(cr_fu_459_p2.read());
}

void hls_skin_dection::thread_tmp_34_i_fu_496_p2() {
    tmp_34_i_fu_496_p2 = (!tmp_33_i_fu_492_p1.read().is_01() || !cr_lower_read_reg_637.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_33_i_fu_492_p1.read()) > sc_bigint<32>(cr_lower_read_reg_637.read()));
}

void hls_skin_dection::thread_tmp_35_i_fu_501_p2() {
    tmp_35_i_fu_501_p2 = (!tmp_33_i_fu_492_p1.read().is_01() || !cr_upper_read_reg_642.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_33_i_fu_492_p1.read()) < sc_bigint<32>(cr_upper_read_reg_642.read()));
}

void hls_skin_dection::thread_tmp_4_cast65_i_fu_387_p1() {
    tmp_4_cast65_i_fu_387_p1 = esl_zext<15,8>(tmp_5_reg_676.read());
}

void hls_skin_dection::thread_tmp_5_i_fu_390_p0() {
    tmp_5_i_fu_390_p0 =  (sc_lv<8>) (tmp_4_cast65_i_fu_387_p1.read());
}

void hls_skin_dection::thread_tmp_6_cast_i_fu_396_p1() {
    tmp_6_cast_i_fu_396_p1 = esl_zext<16,8>(tmp_4_reg_670.read());
}

void hls_skin_dection::thread_tmp_8_cast64_i_fu_399_p1() {
    tmp_8_cast64_i_fu_399_p1 = esl_zext<14,8>(tmp_3_reg_663.read());
}

void hls_skin_dection::thread_tmp_i_fu_361_p2() {
    tmp_i_fu_361_p2 = (!row_cast_i_fu_357_p1.read().is_01() || !rows_read_reg_607.read().is_01())? sc_lv<1>(): (sc_bigint<32>(row_cast_i_fu_357_p1.read()) < sc_bigint<32>(rows_read_reg_607.read()));
}

void hls_skin_dection::thread_y_fu_445_p4() {
    y_fu_445_p4 = grp_fu_599_p3.read().range(15, 8);
}

void hls_skin_dection::thread_y_lower_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        y_lower_blk_n = y_lower_empty_n.read();
    } else {
        y_lower_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_y_lower_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        y_lower_read = ap_const_logic_1;
    } else {
        y_lower_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_y_upper_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        y_upper_blk_n = y_upper_empty_n.read();
    } else {
        y_upper_blk_n = ap_const_logic_1;
    }
}

void hls_skin_dection::thread_y_upper_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
        y_upper_read = ap_const_logic_1;
    } else {
        y_upper_read = ap_const_logic_0;
    }
}

void hls_skin_dection::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cols_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cb_upper_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_lower_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, cr_upper_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_361_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))) && esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_1_i_fu_376_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}


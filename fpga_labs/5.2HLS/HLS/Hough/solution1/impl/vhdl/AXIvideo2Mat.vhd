-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AXIvideo2Mat is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    AXI_video_strm_V_data_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    AXI_video_strm_V_data_V_empty_n : IN STD_LOGIC;
    AXI_video_strm_V_data_V_read : OUT STD_LOGIC;
    AXI_video_strm_V_keep_V_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    AXI_video_strm_V_keep_V_empty_n : IN STD_LOGIC;
    AXI_video_strm_V_keep_V_read : OUT STD_LOGIC;
    AXI_video_strm_V_strb_V_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    AXI_video_strm_V_strb_V_empty_n : IN STD_LOGIC;
    AXI_video_strm_V_strb_V_read : OUT STD_LOGIC;
    AXI_video_strm_V_user_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_V_user_V_empty_n : IN STD_LOGIC;
    AXI_video_strm_V_user_V_read : OUT STD_LOGIC;
    AXI_video_strm_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_V_last_V_empty_n : IN STD_LOGIC;
    AXI_video_strm_V_last_V_read : OUT STD_LOGIC;
    AXI_video_strm_V_id_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_V_id_V_empty_n : IN STD_LOGIC;
    AXI_video_strm_V_id_V_read : OUT STD_LOGIC;
    AXI_video_strm_V_dest_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    AXI_video_strm_V_dest_V_empty_n : IN STD_LOGIC;
    AXI_video_strm_V_dest_V_read : OUT STD_LOGIC;
    img_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    img_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    img_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_V_full_n : IN STD_LOGIC;
    img_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of AXIvideo2Mat is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal AXI_video_strm_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond_reg_349 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_phi_mux_eol_2_phi_fu_243_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_keep_V_blk_n : STD_LOGIC;
    signal AXI_video_strm_V_strb_V_blk_n : STD_LOGIC;
    signal AXI_video_strm_V_user_V_blk_n : STD_LOGIC;
    signal AXI_video_strm_V_last_V_blk_n : STD_LOGIC;
    signal AXI_video_strm_V_id_V_blk_n : STD_LOGIC;
    signal AXI_video_strm_V_dest_V_blk_n : STD_LOGIC;
    signal img_data_stream_V_blk_n : STD_LOGIC;
    signal t_V_2_reg_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal eol_1_reg_157 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_reg_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal eol_reg_179 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_reg_320 : STD_LOGIC_VECTOR (31 downto 0);
    signal AXI_video_strm_V_id_V0_status : STD_LOGIC;
    signal tmp_last_V_reg_328 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_V_fu_274_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op59_read_state6 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_V_fu_285_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state8 : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal axi_last_V_3_reg_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V1_reg_115 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal axi_data_V_3_reg_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal axi_data_V1_reg_125 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_reg_135 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_axi_last_V_2_phi_fu_196_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_Val2_s_phi_fu_208_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_axi_last_V_2_reg_191 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter1_p_Val2_s_reg_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal eol_2_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal AXI_video_strm_V_id_V0_update : STD_LOGIC;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal sof_1_fu_74 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_fu_260_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_105 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond_fu_280_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((exitcond2_fu_269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((exitcond2_fu_269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_V1_reg_125_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                axi_data_V1_reg_125 <= tmp_data_V_reg_320;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                axi_data_V1_reg_125 <= axi_data_V_3_reg_228;
            end if; 
        end if;
    end process;

    axi_data_V_1_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_349 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                axi_data_V_1_reg_168 <= ap_phi_mux_p_Val2_s_phi_fu_208_p4;
            elsif (((exitcond2_fu_269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                axi_data_V_1_reg_168 <= axi_data_V1_reg_125;
            end if; 
        end if;
    end process;

    axi_data_V_3_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                axi_data_V_3_reg_228 <= axi_data_V_1_reg_168;
            elsif ((not(((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_id_V0_status))) and (eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                axi_data_V_3_reg_228 <= AXI_video_strm_V_data_V_dout;
            end if; 
        end if;
    end process;

    axi_last_V1_reg_115_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                axi_last_V1_reg_115 <= tmp_last_V_reg_328;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                axi_last_V1_reg_115 <= axi_last_V_3_reg_216;
            end if; 
        end if;
    end process;

    axi_last_V_3_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                axi_last_V_3_reg_216 <= eol_1_reg_157;
            elsif ((not(((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_id_V0_status))) and (eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                axi_last_V_3_reg_216 <= AXI_video_strm_V_last_V_dout;
            end if; 
        end if;
    end process;

    eol_1_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_349 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                eol_1_reg_157 <= ap_phi_mux_axi_last_V_2_phi_fu_196_p4;
            elsif (((exitcond2_fu_269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                eol_1_reg_157 <= axi_last_V1_reg_115;
            end if; 
        end if;
    end process;

    eol_2_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                eol_2_reg_240 <= eol_reg_179;
            elsif ((not(((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_id_V0_status))) and (eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                eol_2_reg_240 <= AXI_video_strm_V_last_V_dout;
            end if; 
        end if;
    end process;

    eol_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_349 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                eol_reg_179 <= ap_phi_mux_axi_last_V_2_phi_fu_196_p4;
            elsif (((exitcond2_fu_269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                eol_reg_179 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    sof_1_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_349 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                sof_1_fu_74 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                sof_1_fu_74 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    t_V_2_reg_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_280_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_2_reg_146 <= j_V_fu_285_p2;
            elsif (((exitcond2_fu_269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                t_V_2_reg_146 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_reg_135 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_135 <= i_V_reg_344;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond_reg_349 <= exitcond_fu_280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_V_reg_344 <= i_V_fu_274_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = AXI_video_strm_V_id_V0_status))) then
                tmp_data_V_reg_320 <= AXI_video_strm_V_data_V_dout;
                tmp_last_V_reg_328 <= AXI_video_strm_V_last_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, ap_phi_mux_eol_2_phi_fu_243_p4, AXI_video_strm_V_id_V0_status, exitcond2_fu_269_p2, ap_CS_fsm_state4, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_subdone, eol_2_reg_240, tmp_user_V_fu_260_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_user_V_fu_260_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = AXI_video_strm_V_id_V0_status))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_user_V_fu_260_p1 = ap_const_lv1_1) and (ap_const_logic_1 = AXI_video_strm_V_id_V0_status))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_fu_269_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if ((not(((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_id_V0_status))) and (eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif ((not(((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_id_V0_status))) and (ap_phi_mux_eol_2_phi_fu_243_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    AXI_video_strm_V_data_V_blk_n_assign_proc : process(AXI_video_strm_V_data_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_349, brmerge_fu_294_p2, ap_CS_fsm_state8, eol_2_reg_240)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((brmerge_fu_294_p2 = ap_const_lv1_0) and (exitcond_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            AXI_video_strm_V_data_V_blk_n <= AXI_video_strm_V_data_V_empty_n;
        else 
            AXI_video_strm_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_V_data_V_read <= AXI_video_strm_V_id_V0_update;

    AXI_video_strm_V_dest_V_blk_n_assign_proc : process(AXI_video_strm_V_dest_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_349, brmerge_fu_294_p2, ap_CS_fsm_state8, eol_2_reg_240)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((brmerge_fu_294_p2 = ap_const_lv1_0) and (exitcond_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            AXI_video_strm_V_dest_V_blk_n <= AXI_video_strm_V_dest_V_empty_n;
        else 
            AXI_video_strm_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_V_dest_V_read <= AXI_video_strm_V_id_V0_update;
    AXI_video_strm_V_id_V0_status <= (AXI_video_strm_V_user_V_empty_n and AXI_video_strm_V_strb_V_empty_n and AXI_video_strm_V_last_V_empty_n and AXI_video_strm_V_keep_V_empty_n and AXI_video_strm_V_id_V_empty_n and AXI_video_strm_V_dest_V_empty_n and AXI_video_strm_V_data_V_empty_n);

    AXI_video_strm_V_id_V0_update_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, AXI_video_strm_V_id_V0_status, ap_predicate_op59_read_state6, ap_block_pp1_stage0_11001, eol_2_reg_240)
    begin
        if (((not(((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_id_V0_status))) and (eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op59_read_state6 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = AXI_video_strm_V_id_V0_status)))) then 
            AXI_video_strm_V_id_V0_update <= ap_const_logic_1;
        else 
            AXI_video_strm_V_id_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    AXI_video_strm_V_id_V_blk_n_assign_proc : process(AXI_video_strm_V_id_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_349, brmerge_fu_294_p2, ap_CS_fsm_state8, eol_2_reg_240)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((brmerge_fu_294_p2 = ap_const_lv1_0) and (exitcond_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            AXI_video_strm_V_id_V_blk_n <= AXI_video_strm_V_id_V_empty_n;
        else 
            AXI_video_strm_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_V_id_V_read <= AXI_video_strm_V_id_V0_update;

    AXI_video_strm_V_keep_V_blk_n_assign_proc : process(AXI_video_strm_V_keep_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_349, brmerge_fu_294_p2, ap_CS_fsm_state8, eol_2_reg_240)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((brmerge_fu_294_p2 = ap_const_lv1_0) and (exitcond_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            AXI_video_strm_V_keep_V_blk_n <= AXI_video_strm_V_keep_V_empty_n;
        else 
            AXI_video_strm_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_V_keep_V_read <= AXI_video_strm_V_id_V0_update;

    AXI_video_strm_V_last_V_blk_n_assign_proc : process(AXI_video_strm_V_last_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_349, brmerge_fu_294_p2, ap_CS_fsm_state8, eol_2_reg_240)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((brmerge_fu_294_p2 = ap_const_lv1_0) and (exitcond_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            AXI_video_strm_V_last_V_blk_n <= AXI_video_strm_V_last_V_empty_n;
        else 
            AXI_video_strm_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_V_last_V_read <= AXI_video_strm_V_id_V0_update;

    AXI_video_strm_V_strb_V_blk_n_assign_proc : process(AXI_video_strm_V_strb_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_349, brmerge_fu_294_p2, ap_CS_fsm_state8, eol_2_reg_240)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((brmerge_fu_294_p2 = ap_const_lv1_0) and (exitcond_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            AXI_video_strm_V_strb_V_blk_n <= AXI_video_strm_V_strb_V_empty_n;
        else 
            AXI_video_strm_V_strb_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_V_strb_V_read <= AXI_video_strm_V_id_V0_update;

    AXI_video_strm_V_user_V_blk_n_assign_proc : process(AXI_video_strm_V_user_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_349, brmerge_fu_294_p2, ap_CS_fsm_state8, eol_2_reg_240)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((brmerge_fu_294_p2 = ap_const_lv1_0) and (exitcond_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            AXI_video_strm_V_user_V_blk_n <= AXI_video_strm_V_user_V_empty_n;
        else 
            AXI_video_strm_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    AXI_video_strm_V_user_V_read <= AXI_video_strm_V_id_V0_update;
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(img_data_stream_V_full_n, ap_enable_reg_pp1_iter1, exitcond_reg_349, AXI_video_strm_V_id_V0_status, ap_predicate_op59_read_state6)
    begin
                ap_block_pp1_stage0_01001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((exitcond_reg_349 = ap_const_lv1_0) and (img_data_stream_V_full_n = ap_const_logic_0)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V0_status) and (ap_predicate_op59_read_state6 = ap_const_boolean_1))));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(img_data_stream_V_full_n, ap_enable_reg_pp1_iter1, exitcond_reg_349, AXI_video_strm_V_id_V0_status, ap_predicate_op59_read_state6)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((exitcond_reg_349 = ap_const_lv1_0) and (img_data_stream_V_full_n = ap_const_logic_0)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V0_status) and (ap_predicate_op59_read_state6 = ap_const_boolean_1))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(img_data_stream_V_full_n, ap_enable_reg_pp1_iter1, exitcond_reg_349, AXI_video_strm_V_id_V0_status, ap_predicate_op59_read_state6)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((exitcond_reg_349 = ap_const_lv1_0) and (img_data_stream_V_full_n = ap_const_logic_0)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V0_status) and (ap_predicate_op59_read_state6 = ap_const_boolean_1))));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp1_stage0_iter1_assign_proc : process(img_data_stream_V_full_n, exitcond_reg_349, AXI_video_strm_V_id_V0_status, ap_predicate_op59_read_state6)
    begin
                ap_block_state6_pp1_stage0_iter1 <= (((exitcond_reg_349 = ap_const_lv1_0) and (img_data_stream_V_full_n = ap_const_logic_0)) or ((ap_const_logic_0 = AXI_video_strm_V_id_V0_status) and (ap_predicate_op59_read_state6 = ap_const_boolean_1)));
    end process;


    ap_block_state8_assign_proc : process(AXI_video_strm_V_id_V0_status, eol_2_reg_240)
    begin
                ap_block_state8 <= ((eol_2_reg_240 = ap_const_lv1_0) and (ap_const_logic_0 = AXI_video_strm_V_id_V0_status));
    end process;


    ap_condition_105_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_349)
    begin
                ap_condition_105 <= ((exitcond_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond2_fu_269_p2, ap_CS_fsm_state4)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_fu_269_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_axi_last_V_2_phi_fu_196_p4_assign_proc : process(AXI_video_strm_V_last_V_dout, brmerge_fu_294_p2, eol_1_reg_157, ap_phi_reg_pp1_iter1_axi_last_V_2_reg_191, ap_condition_105)
    begin
        if ((ap_const_boolean_1 = ap_condition_105)) then
            if ((brmerge_fu_294_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_axi_last_V_2_phi_fu_196_p4 <= eol_1_reg_157;
            elsif ((brmerge_fu_294_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_axi_last_V_2_phi_fu_196_p4 <= AXI_video_strm_V_last_V_dout;
            else 
                ap_phi_mux_axi_last_V_2_phi_fu_196_p4 <= ap_phi_reg_pp1_iter1_axi_last_V_2_reg_191;
            end if;
        else 
            ap_phi_mux_axi_last_V_2_phi_fu_196_p4 <= ap_phi_reg_pp1_iter1_axi_last_V_2_reg_191;
        end if; 
    end process;

    ap_phi_mux_eol_2_phi_fu_243_p4 <= eol_2_reg_240;

    ap_phi_mux_p_Val2_s_phi_fu_208_p4_assign_proc : process(AXI_video_strm_V_data_V_dout, brmerge_fu_294_p2, axi_data_V_1_reg_168, ap_phi_reg_pp1_iter1_p_Val2_s_reg_204, ap_condition_105)
    begin
        if ((ap_const_boolean_1 = ap_condition_105)) then
            if ((brmerge_fu_294_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_Val2_s_phi_fu_208_p4 <= axi_data_V_1_reg_168;
            elsif ((brmerge_fu_294_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_p_Val2_s_phi_fu_208_p4 <= AXI_video_strm_V_data_V_dout;
            else 
                ap_phi_mux_p_Val2_s_phi_fu_208_p4 <= ap_phi_reg_pp1_iter1_p_Val2_s_reg_204;
            end if;
        else 
            ap_phi_mux_p_Val2_s_phi_fu_208_p4 <= ap_phi_reg_pp1_iter1_p_Val2_s_reg_204;
        end if; 
    end process;

    ap_phi_reg_pp1_iter1_axi_last_V_2_reg_191 <= "X";
    ap_phi_reg_pp1_iter1_p_Val2_s_reg_204 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op59_read_state6_assign_proc : process(exitcond_reg_349, brmerge_fu_294_p2)
    begin
                ap_predicate_op59_read_state6 <= ((brmerge_fu_294_p2 = ap_const_lv1_0) and (exitcond_reg_349 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond2_fu_269_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond2_fu_269_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_294_p2 <= (sof_1_fu_74 or eol_reg_179);
    exitcond2_fu_269_p2 <= "1" when (t_V_reg_135 = img_rows_V_read) else "0";
    exitcond_fu_280_p2 <= "1" when (t_V_2_reg_146 = img_cols_V_read) else "0";
    i_V_fu_274_p2 <= std_logic_vector(unsigned(t_V_reg_135) + unsigned(ap_const_lv32_1));

    img_data_stream_V_blk_n_assign_proc : process(img_data_stream_V_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_349)
    begin
        if (((exitcond_reg_349 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            img_data_stream_V_blk_n <= img_data_stream_V_full_n;
        else 
            img_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_data_stream_V_din <= ap_phi_mux_p_Val2_s_phi_fu_208_p4(8 - 1 downto 0);

    img_data_stream_V_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_349, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_349 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img_data_stream_V_write <= ap_const_logic_1;
        else 
            img_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_285_p2 <= std_logic_vector(unsigned(t_V_2_reg_146) + unsigned(ap_const_lv32_1));
    tmp_user_V_fu_260_p1 <= AXI_video_strm_V_user_V_dout;
end behav;

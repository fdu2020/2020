-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Dilate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Dilate is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_cond_i_i_i_reg_1111 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1067 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_1058 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal or_cond_i_i_reg_1147 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1147_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_5_reg_269 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_s_fu_280_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_286_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_292_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg465_i_i_fu_298_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond461_i_i_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1053 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_not_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_not_reg_1062 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_167_2_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_167_2_reg_1076 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1080 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_510_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_50_reg_1087 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_51_fu_527_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_51_reg_1092 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_52_fu_544_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_52_reg_1097 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond460_i_i_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond460_i_i_reg_1102 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op125_read_state4 : BOOLEAN;
    signal ap_predicate_op133_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond460_i_i_reg_1102_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_553_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_i_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1115 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1122 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_56_fu_646_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_reg_1128 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1135 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1141 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond_i_i_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_kernel_win_0_va_6_fu_744_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1151 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_0210_i_4_fu_861_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_0210_i_4_reg_1158 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_258 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_29_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_762_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_780_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_675_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_711_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_693_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_326_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_25_fu_359_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_365_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_390_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_4_1_fu_405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_194_1_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_4_2_fu_451_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_457_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_194_2_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_482_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i495_i_i_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_5_fu_398_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fu_497_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_fu_505_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i495_i_i_1_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_5_1_fu_444_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_fu_514_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_1_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i495_i_i_2_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_5_2_fu_490_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_fu_531_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_2_fu_539_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_559_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ImagLoc_x_fu_575_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_581_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_606_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_614_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fu_621_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_1_fu_629_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp2_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_664_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_682_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_700_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_733_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_751_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_769_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_213_0_1_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_0210_i_fu_805_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_213_0_2_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_0210_i_1_fu_819_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_213_1_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_0210_i_2_fu_833_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_213_1_1_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_0210_i_3_fu_847_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_213_1_2_fu_855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_213_2_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_0210_i_5_fu_906_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_213_2_1_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_0210_i_6_fu_919_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_213_2_2_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_99 : BOOLEAN;
    signal ap_enable_state3_pp0_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_116 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op129_store_state4 : BOOLEAN;
    signal ap_enable_operation_129 : BOOLEAN;
    signal ap_predicate_op134_store_state4 : BOOLEAN;
    signal ap_enable_operation_134 : BOOLEAN;
    signal ap_enable_operation_102 : BOOLEAN;
    signal ap_enable_operation_119 : BOOLEAN;
    signal ap_predicate_op127_store_state4 : BOOLEAN;
    signal ap_enable_operation_127 : BOOLEAN;
    signal ap_predicate_op132_store_state4 : BOOLEAN;
    signal ap_enable_operation_132 : BOOLEAN;
    signal ap_enable_operation_104 : BOOLEAN;
    signal ap_enable_operation_122 : BOOLEAN;
    signal ap_predicate_op126_store_state4 : BOOLEAN;
    signal ap_enable_operation_126 : BOOLEAN;
    signal ap_predicate_op131_store_state4 : BOOLEAN;
    signal ap_enable_operation_131 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_734 : BOOLEAN;

    component hls_fast_corner_mpcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component FAST_t_opr_k_buf_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component FAST_t_opr_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component FAST_t_opr_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component FAST_t_opr_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    hls_fast_corner_mpcA_U48 : component hls_fast_corner_mpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_156,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => tmp_56_reg_1128,
        dout => tmp_30_fu_664_p5);

    hls_fast_corner_mpcA_U49 : component hls_fast_corner_mpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_2_fu_164,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => tmp_56_reg_1128,
        dout => tmp_31_fu_682_p5);

    hls_fast_corner_mpcA_U50 : component hls_fast_corner_mpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_1_fu_160,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => tmp_56_reg_1128,
        dout => tmp_32_fu_700_p5);

    hls_fast_corner_mpcA_U51 : component hls_fast_corner_mpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_675_p3,
        din1 => col_buf_0_val_1_0_fu_693_p3,
        din2 => col_buf_0_val_2_0_fu_711_p3,
        din3 => tmp_50_reg_1087,
        dout => tmp_33_fu_733_p5);

    hls_fast_corner_mpcA_U52 : component hls_fast_corner_mpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_675_p3,
        din1 => col_buf_0_val_1_0_fu_693_p3,
        din2 => col_buf_0_val_2_0_fu_711_p3,
        din3 => tmp_51_reg_1092,
        dout => tmp_34_fu_751_p5);

    hls_fast_corner_mpcA_U53 : component hls_fast_corner_mpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_675_p3,
        din1 => col_buf_0_val_1_0_fu_693_p3,
        din2 => col_buf_0_val_2_0_fu_711_p3,
        din3 => tmp_52_reg_1097,
        dout => tmp_35_fu_769_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond461_i_i_fu_304_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond461_i_i_fu_304_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((exitcond461_i_i_fu_304_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_5_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_i_fu_548_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_5_reg_269 <= j_V_fu_553_p2;
            elsif (((exitcond461_i_i_fu_304_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_5_reg_269 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                t_V_reg_258 <= i_V_reg_1053;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_258 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_i_fu_548_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1115 <= brmerge_fu_634_p2;
                k_buf_0_val_3_addr_reg_1122 <= tmp_29_fu_639_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1135 <= tmp_29_fu_639_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1141 <= tmp_29_fu_639_p1(11 - 1 downto 0);
                or_cond_i_i_i_reg_1111 <= or_cond_i_i_i_fu_600_p2;
                or_cond_i_i_reg_1147 <= or_cond_i_i_fu_650_p2;
                tmp_56_reg_1128 <= tmp_56_fu_646_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond460_i_i_reg_1102 <= exitcond460_i_i_fu_548_p2;
                exitcond460_i_i_reg_1102_pp0_iter1_reg <= exitcond460_i_i_reg_1102;
                or_cond_i_i_reg_1147_pp0_iter1_reg <= or_cond_i_i_reg_1147;
                src_kernel_win_0_va_6_reg_1151 <= src_kernel_win_0_va_6_fu_744_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1053 <= i_V_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond461_i_i_fu_304_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1067 <= icmp_fu_336_p2;
                tmp_137_not_reg_1062 <= tmp_137_not_fu_320_p2;
                tmp_167_2_reg_1076 <= tmp_167_2_fu_348_p2;
                tmp_21_reg_1058 <= tmp_21_fu_315_p2;
                tmp_23_reg_1072 <= tmp_23_fu_342_p2;
                tmp_24_reg_1080 <= tmp_24_fu_354_p2;
                tmp_50_reg_1087 <= tmp_50_fu_510_p1;
                tmp_51_reg_1092 <= tmp_51_fu_527_p1;
                tmp_52_reg_1097 <= tmp_52_fu_544_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_160 <= col_buf_0_val_2_0_fu_711_p3;
                right_border_buf_0_2_fu_164 <= col_buf_0_val_1_0_fu_693_p3;
                right_border_buf_0_s_fu_156 <= col_buf_0_val_0_0_fu_675_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_i_reg_1102_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_136 <= src_kernel_win_0_va_fu_132;
                src_kernel_win_0_va_fu_132 <= src_kernel_win_0_va_6_reg_1151;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond460_i_i_reg_1102 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_2_fu_140 <= src_kernel_win_0_va_7_fu_762_p3;
                src_kernel_win_0_va_3_fu_144 <= src_kernel_win_0_va_2_fu_140;
                src_kernel_win_0_va_4_fu_148 <= src_kernel_win_0_va_8_fu_780_p3;
                src_kernel_win_0_va_5_fu_152 <= src_kernel_win_0_va_4_fu_148;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_i_reg_1147 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                temp_0_i_i_i_0210_i_4_reg_1158 <= temp_0_i_i_i_0210_i_4_fu_861_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, exitcond461_i_i_fu_304_p2, ap_CS_fsm_state2, exitcond460_i_i_fu_548_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond461_i_i_fu_304_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond460_i_i_fu_548_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((exitcond460_i_i_fu_548_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_575_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_5_reg_269));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, or_cond_i_i_reg_1147_pp0_iter1_reg, ap_predicate_op125_read_state4, ap_predicate_op133_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_i_reg_1147_pp0_iter1_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op125_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, or_cond_i_i_reg_1147_pp0_iter1_reg, ap_predicate_op125_read_state4, ap_predicate_op133_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_i_reg_1147_pp0_iter1_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op125_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, or_cond_i_i_reg_1147_pp0_iter1_reg, ap_predicate_op125_read_state4, ap_predicate_op133_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_i_reg_1147_pp0_iter1_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op125_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op125_read_state4, ap_predicate_op133_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op125_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_i_reg_1147_pp0_iter1_reg)
    begin
                ap_block_state5_pp0_stage0_iter2 <= ((or_cond_i_i_reg_1147_pp0_iter1_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_734_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, or_cond_i_i_i_reg_1111)
    begin
                ap_condition_734 <= ((or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond460_i_i_fu_548_p2)
    begin
        if ((exitcond460_i_i_fu_548_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond461_i_i_fu_304_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond461_i_i_fu_304_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_102_assign_proc : process(exitcond460_i_i_fu_548_p2)
    begin
                ap_enable_operation_102 <= (exitcond460_i_i_fu_548_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_104_assign_proc : process(exitcond460_i_i_fu_548_p2)
    begin
                ap_enable_operation_104 <= (exitcond460_i_i_fu_548_p2 = ap_const_lv1_0);
    end process;

        ap_enable_operation_116 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_119 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_122 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_126_assign_proc : process(ap_predicate_op126_store_state4)
    begin
                ap_enable_operation_126 <= (ap_predicate_op126_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_127_assign_proc : process(ap_predicate_op127_store_state4)
    begin
                ap_enable_operation_127 <= (ap_predicate_op127_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_129_assign_proc : process(ap_predicate_op129_store_state4)
    begin
                ap_enable_operation_129 <= (ap_predicate_op129_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_131_assign_proc : process(ap_predicate_op131_store_state4)
    begin
                ap_enable_operation_131 <= (ap_predicate_op131_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_132_assign_proc : process(ap_predicate_op132_store_state4)
    begin
                ap_enable_operation_132 <= (ap_predicate_op132_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_134_assign_proc : process(ap_predicate_op134_store_state4)
    begin
                ap_enable_operation_134 <= (ap_predicate_op134_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_99_assign_proc : process(exitcond460_i_i_fu_548_p2)
    begin
                ap_enable_operation_99 <= (exitcond460_i_i_fu_548_p2 = ap_const_lv1_0);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state3_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
                ap_enable_state3_pp0_iter0_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op125_read_state4_assign_proc : process(or_cond_i_i_i_reg_1111, icmp_reg_1067)
    begin
                ap_predicate_op125_read_state4 <= ((icmp_reg_1067 = ap_const_lv1_0) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1));
    end process;


    ap_predicate_op126_store_state4_assign_proc : process(or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_23_reg_1072)
    begin
                ap_predicate_op126_store_state4 <= ((icmp_reg_1067 = ap_const_lv1_0) and (tmp_23_reg_1072 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1));
    end process;


    ap_predicate_op127_store_state4_assign_proc : process(or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_23_reg_1072)
    begin
                ap_predicate_op127_store_state4 <= ((icmp_reg_1067 = ap_const_lv1_0) and (tmp_23_reg_1072 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1));
    end process;


    ap_predicate_op129_store_state4_assign_proc : process(or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_167_2_reg_1076)
    begin
                ap_predicate_op129_store_state4 <= ((icmp_reg_1067 = ap_const_lv1_0) and (tmp_167_2_reg_1076 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1));
    end process;


    ap_predicate_op131_store_state4_assign_proc : process(or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058)
    begin
                ap_predicate_op131_store_state4 <= ((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1));
    end process;


    ap_predicate_op132_store_state4_assign_proc : process(or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058)
    begin
                ap_predicate_op132_store_state4 <= ((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1));
    end process;


    ap_predicate_op133_read_state4_assign_proc : process(or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058)
    begin
                ap_predicate_op133_read_state4 <= ((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1));
    end process;


    ap_predicate_op134_store_state4_assign_proc : process(or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058)
    begin
                ap_predicate_op134_store_state4 <= ((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(exitcond461_i_i_fu_304_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond461_i_i_fu_304_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_634_p2 <= (tmp_28_fu_595_p2 or tmp_137_not_reg_1062);
    col_assign_1_fu_629_p2 <= std_logic_vector(unsigned(tmp_19_fu_292_p2) - unsigned(x_fu_621_p3));
    col_buf_0_val_0_0_fu_675_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1115(0) = '1') else 
        tmp_30_fu_664_p5;
    col_buf_0_val_1_0_fu_693_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1115(0) = '1') else 
        tmp_31_fu_682_p5;
    col_buf_0_val_2_0_fu_711_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1115(0) = '1') else 
        tmp_32_fu_700_p5;
    exitcond460_i_i_fu_548_p2 <= "1" when (t_V_5_reg_269 = tmp_s_fu_280_p2) else "0";
    exitcond461_i_i_fu_304_p2 <= "1" when (t_V_reg_258 = tmp_18_fu_286_p2) else "0";
    i_V_fu_309_p2 <= std_logic_vector(unsigned(t_V_reg_258) + unsigned(ap_const_lv32_1));
    icmp2_fu_569_p2 <= "0" when (tmp_53_fu_559_p4 = ap_const_lv31_0) else "1";
    icmp_fu_336_p2 <= "0" when (tmp_fu_326_p4 = ap_const_lv31_0) else "1";
    j_V_fu_553_p2 <= std_logic_vector(unsigned(t_V_5_reg_269) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= tmp_29_fu_639_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1122;

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058, tmp_167_2_reg_1076, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_reg_1067 = ap_const_lv1_0) and (tmp_167_2_reg_1076 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058, tmp_167_2_reg_1076, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_reg_1067 = ap_const_lv1_0) and (tmp_167_2_reg_1076 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_29_fu_639_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1135;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058, tmp_23_reg_1072, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_reg_1067 = ap_const_lv1_0) and (tmp_23_reg_1072 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1067, tmp_21_reg_1058, tmp_23_reg_1072, k_buf_0_val_3_q0, ap_condition_734)
    begin
        if ((ap_const_boolean_1 = ap_condition_734)) then
            if (((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (((icmp_reg_1067 = ap_const_lv1_0) and (tmp_23_reg_1072 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058, tmp_23_reg_1072, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_reg_1067 = ap_const_lv1_0) and (tmp_23_reg_1072 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_29_fu_639_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1141;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058, tmp_23_reg_1072, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_reg_1067 = ap_const_lv1_0) and (tmp_23_reg_1072 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_reg_1067, tmp_21_reg_1058, tmp_23_reg_1072, k_buf_0_val_4_q0, ap_condition_734)
    begin
        if ((ap_const_boolean_1 = ap_condition_734)) then
            if (((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (((icmp_reg_1067 = ap_const_lv1_0) and (tmp_23_reg_1072 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058, tmp_23_reg_1072, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_reg_1067 = ap_const_lv1_0) and (tmp_23_reg_1072 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i495_i_i_1_fu_430_p2 <= (tmp_194_1_fu_425_p2 and rev1_fu_419_p2);
    or_cond_i495_i_i_2_fu_476_p2 <= (tmp_194_2_fu_471_p2 and rev2_fu_465_p2);
    or_cond_i495_i_i_fu_384_p2 <= (tmp_26_fu_379_p2 and rev_fu_373_p2);
    or_cond_i_i_fu_650_p2 <= (icmp_reg_1067 and icmp2_fu_569_p2);
    or_cond_i_i_i_fu_600_p2 <= (tmp_28_fu_595_p2 and rev3_fu_589_p2);
    p_assign_1_fu_614_p3 <= 
        ap_const_lv32_0 when (tmp_55_fu_606_p3(0) = '1') else 
        tmp_19_fu_292_p2;
    p_assign_4_1_fu_405_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_258));
    p_assign_4_2_fu_451_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_258));
    p_assign_5_1_fu_444_p3 <= 
        ap_const_lv32_0 when (tmp_47_fu_436_p3(0) = '1') else 
        p_neg465_i_i_fu_298_p2;
    p_assign_5_2_fu_490_p3 <= 
        ap_const_lv32_0 when (tmp_49_fu_482_p3(0) = '1') else 
        p_neg465_i_i_fu_298_p2;
    p_assign_5_fu_398_p3 <= 
        ap_const_lv32_0 when (tmp_45_fu_390_p3(0) = '1') else 
        p_neg465_i_i_fu_298_p2;

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, or_cond_i_i_reg_1147_pp0_iter1_reg)
    begin
        if (((or_cond_i_i_reg_1147_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        src_kernel_win_0_va_6_reg_1151 when (tmp_213_2_2_fu_927_p2(0) = '1') else 
        temp_0_i_i_i_0210_i_6_fu_919_p3;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, or_cond_i_i_reg_1147_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_i_reg_1147_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_neg465_i_i_fu_298_p2 <= std_logic_vector(unsigned(p_src_rows_V) + unsigned(ap_const_lv32_FFFFFFFF));

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, or_cond_i_i_i_reg_1111, icmp_reg_1067, tmp_21_reg_1058)
    begin
        if ((((tmp_21_reg_1058 = ap_const_lv1_1) and (icmp_reg_1067 = ap_const_lv1_1) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_reg_1067 = ap_const_lv1_0) and (or_cond_i_i_i_reg_1111 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op125_read_state4, ap_predicate_op133_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op133_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op125_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rev1_fu_419_p2 <= (tmp_46_fu_411_p3 xor ap_const_lv1_1);
    rev2_fu_465_p2 <= (tmp_48_fu_457_p3 xor ap_const_lv1_1);
    rev3_fu_589_p2 <= (tmp_54_fu_581_p3 xor ap_const_lv1_1);
    rev_fu_373_p2 <= (tmp_44_fu_365_p3 xor ap_const_lv1_1);
    row_assign_7_1_fu_522_p2 <= std_logic_vector(unsigned(p_neg465_i_i_fu_298_p2) - unsigned(y_1_fu_514_p3));
    row_assign_7_2_fu_539_p2 <= std_logic_vector(unsigned(p_neg465_i_i_fu_298_p2) - unsigned(y_2_fu_531_p3));
    row_assign_7_fu_505_p2 <= std_logic_vector(unsigned(p_neg465_i_i_fu_298_p2) - unsigned(y_fu_497_p3));
    src_kernel_win_0_va_6_fu_744_p3 <= 
        tmp_33_fu_733_p5 when (tmp_24_reg_1080(0) = '1') else 
        col_buf_0_val_0_0_fu_675_p3;
    src_kernel_win_0_va_7_fu_762_p3 <= 
        tmp_34_fu_751_p5 when (tmp_24_reg_1080(0) = '1') else 
        col_buf_0_val_1_0_fu_693_p3;
    src_kernel_win_0_va_8_fu_780_p3 <= 
        tmp_35_fu_769_p5 when (tmp_24_reg_1080(0) = '1') else 
        col_buf_0_val_2_0_fu_711_p3;
    temp_0_i_i_i_0210_i_1_fu_819_p3 <= 
        src_kernel_win_0_va_8_fu_780_p3 when (tmp_213_0_2_fu_813_p2(0) = '1') else 
        temp_0_i_i_i_0210_i_fu_805_p3;
    temp_0_i_i_i_0210_i_2_fu_833_p3 <= 
        src_kernel_win_0_va_3_fu_144 when (tmp_213_1_fu_827_p2(0) = '1') else 
        temp_0_i_i_i_0210_i_1_fu_819_p3;
    temp_0_i_i_i_0210_i_3_fu_847_p3 <= 
        src_kernel_win_0_va_2_fu_140 when (tmp_213_1_1_fu_841_p2(0) = '1') else 
        temp_0_i_i_i_0210_i_2_fu_833_p3;
    temp_0_i_i_i_0210_i_4_fu_861_p3 <= 
        src_kernel_win_0_va_7_fu_762_p3 when (tmp_213_1_2_fu_855_p2(0) = '1') else 
        temp_0_i_i_i_0210_i_3_fu_847_p3;
    temp_0_i_i_i_0210_i_5_fu_906_p3 <= 
        src_kernel_win_0_va_1_fu_136 when (tmp_213_2_fu_901_p2(0) = '1') else 
        temp_0_i_i_i_0210_i_4_reg_1158;
    temp_0_i_i_i_0210_i_6_fu_919_p3 <= 
        src_kernel_win_0_va_fu_132 when (tmp_213_2_1_fu_913_p2(0) = '1') else 
        temp_0_i_i_i_0210_i_5_fu_906_p3;
    temp_0_i_i_i_0210_i_fu_805_p3 <= 
        src_kernel_win_0_va_4_fu_148 when (tmp_213_0_1_fu_799_p2(0) = '1') else 
        src_kernel_win_0_va_5_fu_152;
    tmp_137_not_fu_320_p2 <= (tmp_21_fu_315_p2 xor ap_const_lv1_1);
    tmp_167_2_fu_348_p2 <= "1" when (t_V_reg_258 = ap_const_lv32_1) else "0";
    tmp_18_fu_286_p2 <= std_logic_vector(unsigned(p_src_rows_V) + unsigned(ap_const_lv32_2));
    tmp_194_1_fu_425_p2 <= "1" when (signed(p_assign_4_1_fu_405_p2) < signed(p_src_rows_V)) else "0";
    tmp_194_2_fu_471_p2 <= "1" when (signed(p_assign_4_2_fu_451_p2) < signed(p_src_rows_V)) else "0";
    tmp_19_fu_292_p2 <= std_logic_vector(unsigned(p_src_cols_V) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_213_0_1_fu_799_p2 <= "1" when (unsigned(src_kernel_win_0_va_4_fu_148) > unsigned(src_kernel_win_0_va_5_fu_152)) else "0";
    tmp_213_0_2_fu_813_p2 <= "1" when (unsigned(src_kernel_win_0_va_8_fu_780_p3) > unsigned(temp_0_i_i_i_0210_i_fu_805_p3)) else "0";
    tmp_213_1_1_fu_841_p2 <= "1" when (unsigned(src_kernel_win_0_va_2_fu_140) > unsigned(temp_0_i_i_i_0210_i_2_fu_833_p3)) else "0";
    tmp_213_1_2_fu_855_p2 <= "1" when (unsigned(src_kernel_win_0_va_7_fu_762_p3) > unsigned(temp_0_i_i_i_0210_i_3_fu_847_p3)) else "0";
    tmp_213_1_fu_827_p2 <= "1" when (unsigned(src_kernel_win_0_va_3_fu_144) > unsigned(temp_0_i_i_i_0210_i_1_fu_819_p3)) else "0";
    tmp_213_2_1_fu_913_p2 <= "1" when (unsigned(src_kernel_win_0_va_fu_132) > unsigned(temp_0_i_i_i_0210_i_5_fu_906_p3)) else "0";
    tmp_213_2_2_fu_927_p2 <= "1" when (unsigned(src_kernel_win_0_va_6_reg_1151) > unsigned(temp_0_i_i_i_0210_i_6_fu_919_p3)) else "0";
    tmp_213_2_fu_901_p2 <= "1" when (unsigned(src_kernel_win_0_va_1_fu_136) > unsigned(temp_0_i_i_i_0210_i_4_reg_1158)) else "0";
    tmp_21_fu_315_p2 <= "1" when (unsigned(t_V_reg_258) < unsigned(p_src_rows_V)) else "0";
    tmp_23_fu_342_p2 <= "1" when (t_V_reg_258 = ap_const_lv32_0) else "0";
    tmp_24_fu_354_p2 <= "1" when (unsigned(t_V_reg_258) > unsigned(p_src_rows_V)) else "0";
    tmp_25_fu_359_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_258));
    tmp_26_fu_379_p2 <= "1" when (signed(tmp_25_fu_359_p2) < signed(p_src_rows_V)) else "0";
    tmp_28_fu_595_p2 <= "1" when (signed(ImagLoc_x_fu_575_p2) < signed(p_src_cols_V)) else "0";
    tmp_29_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_621_p3),64));
    tmp_44_fu_365_p3 <= tmp_25_fu_359_p2(31 downto 31);
    tmp_45_fu_390_p3 <= tmp_25_fu_359_p2(31 downto 31);
    tmp_46_fu_411_p3 <= p_assign_4_1_fu_405_p2(31 downto 31);
    tmp_47_fu_436_p3 <= p_assign_4_1_fu_405_p2(31 downto 31);
    tmp_48_fu_457_p3 <= p_assign_4_2_fu_451_p2(31 downto 31);
    tmp_49_fu_482_p3 <= p_assign_4_2_fu_451_p2(31 downto 31);
    tmp_50_fu_510_p1 <= row_assign_7_fu_505_p2(2 - 1 downto 0);
    tmp_51_fu_527_p1 <= row_assign_7_1_fu_522_p2(2 - 1 downto 0);
    tmp_52_fu_544_p1 <= row_assign_7_2_fu_539_p2(2 - 1 downto 0);
    tmp_53_fu_559_p4 <= t_V_5_reg_269(31 downto 1);
    tmp_54_fu_581_p3 <= ImagLoc_x_fu_575_p2(31 downto 31);
    tmp_55_fu_606_p3 <= ImagLoc_x_fu_575_p2(31 downto 31);
    tmp_56_fu_646_p1 <= col_assign_1_fu_629_p2(2 - 1 downto 0);
    tmp_fu_326_p4 <= t_V_reg_258(31 downto 1);
    tmp_s_fu_280_p2 <= std_logic_vector(unsigned(p_src_cols_V) + unsigned(ap_const_lv32_2));
    x_fu_621_p3 <= 
        ImagLoc_x_fu_575_p2 when (or_cond_i_i_i_fu_600_p2(0) = '1') else 
        p_assign_1_fu_614_p3;
    y_1_fu_514_p3 <= 
        p_assign_4_1_fu_405_p2 when (or_cond_i495_i_i_1_fu_430_p2(0) = '1') else 
        p_assign_5_1_fu_444_p3;
    y_2_fu_531_p3 <= 
        p_assign_4_2_fu_451_p2 when (or_cond_i495_i_i_2_fu_476_p2(0) = '1') else 
        p_assign_5_2_fu_490_p3;
    y_fu_497_p3 <= 
        tmp_25_fu_359_p2 when (or_cond_i495_i_i_fu_384_p2(0) = '1') else 
        p_assign_5_fu_398_p3;
end behav;

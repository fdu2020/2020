// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module threshold (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_rows_V,
        p_src_cols_V,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 58'd1;
parameter    ap_ST_fsm_state2 = 58'd2;
parameter    ap_ST_fsm_state3 = 58'd4;
parameter    ap_ST_fsm_pp0_stage0 = 58'd8;
parameter    ap_ST_fsm_state7 = 58'd16;
parameter    ap_ST_fsm_state8 = 58'd32;
parameter    ap_ST_fsm_state9 = 58'd64;
parameter    ap_ST_fsm_state10 = 58'd128;
parameter    ap_ST_fsm_state11 = 58'd256;
parameter    ap_ST_fsm_state12 = 58'd512;
parameter    ap_ST_fsm_state13 = 58'd1024;
parameter    ap_ST_fsm_state14 = 58'd2048;
parameter    ap_ST_fsm_state15 = 58'd4096;
parameter    ap_ST_fsm_state16 = 58'd8192;
parameter    ap_ST_fsm_state17 = 58'd16384;
parameter    ap_ST_fsm_state18 = 58'd32768;
parameter    ap_ST_fsm_state19 = 58'd65536;
parameter    ap_ST_fsm_state20 = 58'd131072;
parameter    ap_ST_fsm_pp2_stage0 = 58'd262144;
parameter    ap_ST_fsm_state35 = 58'd524288;
parameter    ap_ST_fsm_state36 = 58'd1048576;
parameter    ap_ST_fsm_pp3_stage0 = 58'd2097152;
parameter    ap_ST_fsm_pp3_stage1 = 58'd4194304;
parameter    ap_ST_fsm_pp3_stage2 = 58'd8388608;
parameter    ap_ST_fsm_pp3_stage3 = 58'd16777216;
parameter    ap_ST_fsm_pp3_stage4 = 58'd33554432;
parameter    ap_ST_fsm_state46 = 58'd67108864;
parameter    ap_ST_fsm_state47 = 58'd134217728;
parameter    ap_ST_fsm_state48 = 58'd268435456;
parameter    ap_ST_fsm_state49 = 58'd536870912;
parameter    ap_ST_fsm_state50 = 58'd1073741824;
parameter    ap_ST_fsm_state51 = 58'd2147483648;
parameter    ap_ST_fsm_state52 = 58'd4294967296;
parameter    ap_ST_fsm_state53 = 58'd8589934592;
parameter    ap_ST_fsm_state54 = 58'd17179869184;
parameter    ap_ST_fsm_state55 = 58'd34359738368;
parameter    ap_ST_fsm_state56 = 58'd68719476736;
parameter    ap_ST_fsm_state57 = 58'd137438953472;
parameter    ap_ST_fsm_state58 = 58'd274877906944;
parameter    ap_ST_fsm_state59 = 58'd549755813888;
parameter    ap_ST_fsm_state60 = 58'd1099511627776;
parameter    ap_ST_fsm_state61 = 58'd2199023255552;
parameter    ap_ST_fsm_state62 = 58'd4398046511104;
parameter    ap_ST_fsm_state63 = 58'd8796093022208;
parameter    ap_ST_fsm_state64 = 58'd17592186044416;
parameter    ap_ST_fsm_state65 = 58'd35184372088832;
parameter    ap_ST_fsm_state66 = 58'd70368744177664;
parameter    ap_ST_fsm_state67 = 58'd140737488355328;
parameter    ap_ST_fsm_state68 = 58'd281474976710656;
parameter    ap_ST_fsm_state69 = 58'd562949953421312;
parameter    ap_ST_fsm_state70 = 58'd1125899906842624;
parameter    ap_ST_fsm_state71 = 58'd2251799813685248;
parameter    ap_ST_fsm_state72 = 58'd4503599627370496;
parameter    ap_ST_fsm_state73 = 58'd9007199254740992;
parameter    ap_ST_fsm_state74 = 58'd18014398509481984;
parameter    ap_ST_fsm_state75 = 58'd36028797018963968;
parameter    ap_ST_fsm_pp4_stage0 = 58'd72057594037927936;
parameter    ap_ST_fsm_state85 = 58'd144115188075855872;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] p_src_rows_V;
input  [31:0] p_src_cols_V;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [57:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [7:0] hls_array_data_V_address0;
reg    hls_array_data_V_ce0;
reg    hls_array_data_V_we0;
reg   [1:0] hls_array_data_V_d0;
wire   [1:0] hls_array_data_V_q0;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_2_reg_2278;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] tmp_2_reg_2278_pp0_iter1_reg;
reg   [30:0] j_reg_452;
reg   [8:0] i5_reg_474;
reg   [31:0] w0_reg_521;
reg   [31:0] u0tmp_reg_533;
reg   [7:0] j7_reg_545;
reg   [20:0] p_4_reg_578;
reg   [8:0] i9_reg_590;
wire   [31:0] grp_fu_627_p1;
reg   [31:0] reg_651;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_pp3_stage2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state39_pp3_stage2_iter0;
wire    ap_block_state44_pp3_stage2_iter1;
wire    ap_block_pp3_stage2_11001;
reg   [0:0] exitcond6_reg_2401;
wire    ap_CS_fsm_state49;
wire   [31:0] grp_fu_624_p1;
reg   [31:0] reg_657;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_state21_pp2_stage0_iter0;
wire    ap_block_state22_pp2_stage0_iter1;
wire    ap_block_state23_pp2_stage0_iter2;
wire    ap_block_state24_pp2_stage0_iter3;
wire    ap_block_state25_pp2_stage0_iter4;
wire    ap_block_state26_pp2_stage0_iter5;
wire    ap_block_state27_pp2_stage0_iter6;
wire    ap_block_state28_pp2_stage0_iter7;
wire    ap_block_state29_pp2_stage0_iter8;
wire    ap_block_state30_pp2_stage0_iter9;
wire    ap_block_state31_pp2_stage0_iter10;
wire    ap_block_state32_pp2_stage0_iter11;
wire    ap_block_state33_pp2_stage0_iter12;
wire    ap_block_state34_pp2_stage0_iter13;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond4_reg_2353;
reg   [0:0] exitcond4_reg_2353_pp2_iter3_reg;
wire    ap_block_state76_pp4_stage0_iter0;
wire    ap_block_state77_pp4_stage0_iter1;
wire    ap_block_state78_pp4_stage0_iter2;
wire    ap_block_state79_pp4_stage0_iter3;
wire    ap_block_state80_pp4_stage0_iter4;
wire    ap_block_state81_pp4_stage0_iter5;
wire    ap_block_state82_pp4_stage0_iter6;
wire    ap_block_state83_pp4_stage0_iter7;
wire    ap_block_state84_pp4_stage0_iter8;
wire    ap_block_pp4_stage0_11001;
reg    ap_enable_reg_pp4_iter4;
reg   [0:0] exitcond_reg_2468;
reg   [0:0] exitcond_reg_2468_pp4_iter3_reg;
wire   [31:0] grp_fu_616_p2;
reg   [31:0] reg_663;
reg    ap_enable_reg_pp2_iter12;
reg   [0:0] exitcond4_reg_2353_pp2_iter11_reg;
wire    ap_CS_fsm_state65;
wire   [31:0] pixelPro_q0;
reg   [31:0] reg_669;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state38_pp3_stage1_iter0;
wire    ap_block_state43_pp3_stage1_iter1;
wire    ap_block_pp3_stage1_11001;
wire   [31:0] grp_fu_611_p2;
reg   [31:0] reg_675;
wire    ap_CS_fsm_pp3_stage4;
wire    ap_block_state41_pp3_stage4_iter0;
wire    ap_block_pp3_stage4_11001;
reg   [31:0] reg_675_pp4_iter7_reg;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state74;
reg    ap_enable_reg_pp4_iter6;
reg   [0:0] exitcond_reg_2468_pp4_iter5_reg;
wire   [31:0] grp_fu_601_p2;
reg   [31:0] reg_683;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state70;
reg    ap_block_state1;
wire   [8:0] i_fu_695_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_1_fu_751_p2;
wire    ap_CS_fsm_state3;
wire   [30:0] i_1_fu_756_p2;
reg   [30:0] i_1_reg_2273;
wire   [0:0] tmp_2_fu_766_p2;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_state6_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [30:0] j_1_fu_771_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] addr_win_val_0_V_2_1_reg_2287;
wire   [0:0] tmp_23_fu_896_p2;
reg   [0:0] tmp_23_reg_2297;
wire   [0:0] tmp_45_1_fu_910_p2;
reg   [0:0] tmp_45_1_reg_2303;
wire   [0:0] tmp_47_2_fu_924_p2;
reg   [0:0] tmp_47_2_reg_2309;
wire   [0:0] tmp_24_fu_938_p2;
reg   [0:0] tmp_24_reg_2315;
wire   [0:0] icmp_fu_960_p2;
reg   [0:0] icmp_reg_2325;
wire   [0:0] sel_tmp5_fu_980_p2;
reg   [0:0] sel_tmp5_reg_2330;
wire   [1:0] m_fu_1170_p2;
wire    ap_CS_fsm_state8;
wire   [31:0] tmp_s_fu_1204_p2;
wire    ap_CS_fsm_state9;
reg   [31:0] scale_reg_2348;
wire    ap_CS_fsm_state20;
wire   [0:0] exitcond4_fu_1208_p2;
wire    ap_CS_fsm_pp2_stage0;
reg   [0:0] exitcond4_reg_2353_pp2_iter1_reg;
reg   [0:0] exitcond4_reg_2353_pp2_iter2_reg;
reg   [0:0] exitcond4_reg_2353_pp2_iter4_reg;
reg   [0:0] exitcond4_reg_2353_pp2_iter5_reg;
reg   [0:0] exitcond4_reg_2353_pp2_iter6_reg;
reg   [0:0] exitcond4_reg_2353_pp2_iter7_reg;
reg   [0:0] exitcond4_reg_2353_pp2_iter8_reg;
reg   [0:0] exitcond4_reg_2353_pp2_iter9_reg;
reg   [0:0] exitcond4_reg_2353_pp2_iter10_reg;
reg   [0:0] exitcond4_reg_2353_pp2_iter12_reg;
wire   [8:0] i_2_fu_1214_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] tmp_13_fu_1220_p1;
reg   [63:0] tmp_13_reg_2362;
reg   [63:0] tmp_13_reg_2362_pp2_iter1_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter2_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter3_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter4_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter5_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter6_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter7_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter8_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter9_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter10_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter11_reg;
reg   [63:0] tmp_13_reg_2362_pp2_iter12_reg;
wire   [20:0] hist_out_V_q0;
reg   [20:0] tmp_V_reg_2372;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] tmp_38_fu_1225_p1;
wire   [31:0] j_5_cast8_fu_1229_p1;
reg   [31:0] j_5_cast8_reg_2382;
wire    ap_CS_fsm_state36;
wire   [9:0] j_5_cast_fu_1233_p1;
reg   [9:0] j_5_cast_reg_2387;
wire   [0:0] exitcond5_fu_1237_p2;
wire   [8:0] i_4_fu_1243_p2;
reg   [8:0] i_4_reg_2396;
wire   [0:0] exitcond6_fu_1253_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state37_pp3_stage0_iter0;
wire    ap_block_state42_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] exitcond6_reg_2401_pp3_iter1_reg;
wire   [7:0] j_2_fu_1258_p2;
reg   [7:0] j_2_reg_2405;
wire   [31:0] j7_cast7_fu_1264_p1;
reg   [31:0] w0_1_reg_2420;
wire    ap_CS_fsm_pp3_stage3;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state40_pp3_stage3_iter0;
wire    ap_block_state45_pp3_stage3_iter1;
wire    ap_block_pp3_stage3_11001;
wire   [7:0] threshold_V_fu_1280_p1;
reg   [7:0] threshold_V_reg_2433;
wire    ap_CS_fsm_state47;
wire   [0:0] exitcond7_fu_1274_p2;
wire    ap_CS_fsm_state48;
wire   [31:0] j_3_fu_1289_p2;
reg   [31:0] j_3_reg_2443;
wire    ap_CS_fsm_state55;
reg   [31:0] u1_reg_2453;
wire    ap_CS_fsm_state66;
wire   [7:0] threshold_V_1_fu_1379_p3;
wire    ap_CS_fsm_state75;
wire   [31:0] deltaMax_1_fu_1386_p3;
wire   [0:0] exitcond_fu_1394_p2;
wire    ap_CS_fsm_pp4_stage0;
reg   [0:0] exitcond_reg_2468_pp4_iter1_reg;
reg   [0:0] exitcond_reg_2468_pp4_iter2_reg;
reg   [0:0] exitcond_reg_2468_pp4_iter4_reg;
reg   [0:0] exitcond_reg_2468_pp4_iter6_reg;
reg   [0:0] exitcond_reg_2468_pp4_iter7_reg;
wire   [8:0] i_3_fu_1400_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] tmp_18_fu_1406_p1;
reg   [63:0] tmp_18_reg_2477;
reg   [63:0] tmp_18_reg_2477_pp4_iter1_reg;
reg   [63:0] tmp_18_reg_2477_pp4_iter2_reg;
reg   [63:0] tmp_18_reg_2477_pp4_iter3_reg;
reg   [63:0] tmp_18_reg_2477_pp4_iter4_reg;
reg   [63:0] tmp_18_reg_2477_pp4_iter5_reg;
reg   [63:0] tmp_18_reg_2477_pp4_iter6_reg;
reg   [63:0] tmp_18_reg_2477_pp4_iter7_reg;
wire   [20:0] sum_V_fu_1411_p2;
reg   [20:0] sum_V_reg_2487;
reg    ap_enable_reg_pp4_iter1;
wire   [31:0] tmp_39_fu_1417_p1;
reg   [0:0] p_Result_7_reg_2498;
wire   [53:0] p_Result_8_fu_1463_p1;
reg   [53:0] p_Result_8_reg_2507;
wire   [53:0] man_V_1_fu_1467_p2;
reg   [53:0] man_V_1_reg_2512;
wire   [0:0] tmp_40_i_fu_1473_p2;
reg   [0:0] tmp_40_i_reg_2517;
wire   [11:0] F2_fu_1479_p2;
reg   [11:0] F2_reg_2523;
wire   [0:0] tmp_41_i_fu_1485_p2;
reg   [0:0] tmp_41_i_reg_2531;
wire  signed [11:0] F2_2_fu_1497_p3;
reg  signed [11:0] F2_2_reg_2537;
wire   [0:0] tmp_43_i_fu_1505_p2;
reg   [0:0] tmp_43_i_reg_2543;
wire   [0:0] tmp_45_i_fu_1511_p2;
reg   [0:0] tmp_45_i_reg_2550;
wire   [0:0] icmp1_fu_1527_p2;
reg   [0:0] icmp1_reg_2555;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state5;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state21;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter13;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state37;
wire    ap_block_pp3_stage4_subdone;
wire    ap_block_pp3_stage3_subdone;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state76;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter7;
reg    ap_enable_reg_pp4_iter8;
reg   [7:0] hist_out_V_address0;
reg    hist_out_V_ce0;
reg    hist_out_V_we0;
reg   [7:0] hist_out_V_address1;
reg    hist_out_V_ce1;
reg    hist_out_V_we1;
reg   [20:0] hist_out_V_d1;
wire   [20:0] hist_out_V_q1;
reg   [7:0] pixelPro_address0;
reg    pixelPro_ce0;
reg    pixelPro_we0;
reg   [31:0] pixelPro_d0;
reg   [8:0] i1_reg_430;
wire   [0:0] exitcond2_fu_689_p2;
reg   [30:0] i2_reg_441;
wire    ap_CS_fsm_state7;
reg   [1:0] col_assign_reg_463;
wire   [0:0] exitcond3_fu_1164_p2;
reg   [8:0] j_4_reg_485;
wire    ap_CS_fsm_state35;
reg   [7:0] p_2_reg_497;
reg   [31:0] deltaMax_reg_509;
reg   [31:0] ap_phi_mux_w0_phi_fu_525_p4;
wire    ap_block_pp3_stage1;
reg   [7:0] ap_phi_mux_j7_phi_fu_549_p4;
wire    ap_block_pp3_stage0;
reg   [31:0] u1tmp_reg_556;
wire    ap_CS_fsm_state46;
reg  signed [31:0] j8_reg_568;
reg   [20:0] ap_phi_mux_p_4_phi_fu_582_p4;
wire    ap_block_pp4_stage0;
wire   [63:0] tmp_8_fu_701_p1;
wire   [63:0] tmp_6_fu_786_p1;
wire   [63:0] tmp_34_fu_1135_p1;
wire   [63:0] tmp_7_fu_1190_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] tmp_26_fu_1269_p1;
wire  signed [63:0] tmp_36_fu_1284_p1;
reg    ap_block_pp0_stage0_01001;
reg   [20:0] p_0334_s_fu_256;
wire   [20:0] p_0334_2_be_2_fu_1101_p3;
reg   [7:0] p_0337_s_fu_260;
wire   [7:0] p_0337_2_be_2_fu_930_p3;
reg   [7:0] addr_win_val_0_V_2_fu_264;
reg   [7:0] addr_win_val_0_V_1_fu_268;
wire   [7:0] addr_win_val_V_0_0_2_fu_994_p3;
reg   [7:0] addr_win_val_0_V_3_fu_272;
reg   [7:0] addr_last_V_fu_276;
reg   [20:0] hist_win_val_0_V_1_1_fu_280;
wire   [20:0] hist_win_val_0_V_1_fu_1094_p3;
reg   [20:0] hist_win_val_V_fu_284;
wire   [20:0] hist_win_val_V_0_0_2_fu_1128_p3;
reg   [20:0] hist_win_val_0_V_2_1_fu_288;
wire   [20:0] hist_win_val_0_V_2_fu_1073_p3;
reg   [20:0] hist_win_val_0_V_3_1_fu_292;
wire   [20:0] hist_win_val_0_V_3_fu_1053_p3;
wire   [20:0] hist_win_val_V_load_s_fu_1195_p3;
wire   [1:0] data_val_V_cast_fu_2172_p3;
wire    ap_CS_fsm_state85;
reg   [31:0] grp_fu_601_p0;
reg   [31:0] grp_fu_601_p1;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state67;
reg   [31:0] grp_fu_611_p0;
reg   [31:0] grp_fu_611_p1;
wire    ap_block_pp3_stage3;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state73;
reg   [31:0] grp_fu_616_p0;
reg   [31:0] grp_fu_616_p1;
wire    ap_CS_fsm_state13;
reg   [31:0] grp_fu_624_p0;
reg   [31:0] grp_fu_627_p0;
wire    ap_CS_fsm_state10;
wire   [31:0] i2_cast_fu_747_p1;
wire  signed [31:0] tmp_1_fu_751_p1;
wire   [31:0] j_cast_fu_762_p1;
wire  signed [31:0] tmp_2_fu_766_p1;
wire   [0:0] tmp_9_fu_792_p2;
wire   [0:0] tmp_23_3_fu_810_p2;
wire   [0:0] tmp_11_fu_824_p2;
wire   [2:0] p_cast_fu_816_p3;
wire   [0:0] tmp_23_1_fu_798_p2;
wire   [0:0] sel_tmp1_fu_838_p2;
wire   [0:0] sel_tmp6_demorgan_fu_850_p2;
wire   [0:0] tmp_23_2_fu_804_p2;
wire   [0:0] sel_tmp6_fu_856_p2;
wire   [0:0] sel_tmp7_fu_862_p2;
wire   [0:0] sel_tmp2_fu_844_p2;
wire   [0:0] tmp_20_fu_876_p2;
wire   [2:0] sel_tmp3_cast_fu_868_p3;
wire   [2:0] sel_tmp_fu_830_p3;
wire   [2:0] p_3_fu_882_p3;
wire   [2:0] ret_V_fu_890_p2;
wire   [7:0] p_0337_2_be_fu_902_p3;
wire   [7:0] addr_V_1_0337_2_be_fu_916_p3;
wire   [1:0] tmp_30_fu_950_p4;
wire   [0:0] tmp_29_fu_944_p2;
wire   [0:0] sel_tmp4_fu_974_p2;
wire   [7:0] storemerge_fu_966_p3;
wire   [7:0] sel_tmp8_fu_986_p3;
wire   [20:0] hist_flag_V_fu_1047_p2;
wire   [20:0] hist_w_V_s_fu_1067_p2;
wire   [20:0] p_0334_2_be_fu_1060_p3;
wire   [20:0] hist_flag_V_2_fu_1088_p2;
wire   [20:0] hist_w_V_172_0334_2_fu_1081_p3;
wire   [20:0] hist_win_val_0_V_0_fu_1108_p2;
wire   [20:0] storemerge1_fu_1114_p3;
wire   [20:0] hist_last_V_fu_1041_p2;
wire   [20:0] sel_tmp9_fu_1121_p3;
wire   [0:0] cond_fu_1176_p2;
wire   [7:0] addr_win_val_V_load_s_fu_1182_p3;
wire  signed [31:0] tmp_s_fu_1204_p0;
wire  signed [31:0] tmp_s_fu_1204_p1;
wire   [9:0] j7_cast_fu_1249_p1;
wire   [31:0] deltaTmp_to_int_fu_1295_p1;
wire   [31:0] deltaMax_to_int_fu_1313_p1;
wire   [7:0] tmp_41_fu_1299_p4;
wire   [22:0] tmp_64_fu_1309_p1;
wire   [0:0] notrhs_fu_1337_p2;
wire   [0:0] notlhs_fu_1331_p2;
wire   [7:0] tmp_43_fu_1317_p4;
wire   [22:0] tmp_65_fu_1327_p1;
wire   [0:0] notrhs1_fu_1355_p2;
wire   [0:0] notlhs1_fu_1349_p2;
wire   [0:0] tmp_45_fu_1343_p2;
wire   [0:0] tmp_46_fu_1361_p2;
wire   [0:0] tmp_47_fu_1367_p2;
wire   [0:0] tmp_48_fu_634_p2;
wire   [0:0] tmp_49_fu_1373_p2;
wire   [63:0] d_assign_fu_631_p1;
wire   [63:0] ireg_V_fu_1421_p1;
wire   [10:0] exp_tmp_V_fu_1437_p4;
wire   [51:0] tmp_52_fu_1451_p1;
wire   [52:0] tmp_26_i_fu_1455_p3;
wire   [62:0] tmp_44_fu_1425_p1;
wire   [11:0] tmp_i_fu_1447_p1;
wire   [11:0] tmp_42_i_fu_1491_p2;
wire   [8:0] tmp_55_fu_1517_p4;
wire   [31:0] p_Val2_1_fu_1533_p1;
wire   [7:0] tmp_V_4_fu_1537_p4;
wire   [22:0] tmp_V_5_fu_1547_p1;
wire   [0:0] tmp_i_i_i_i_fu_1551_p2;
wire   [0:0] tmp_i_i_i_i_20_fu_1557_p2;
wire   [53:0] p_Val2_s_fu_1569_p3;
wire  signed [31:0] F2_2_cast_i_fu_1577_p1;
wire   [53:0] tmp_48_i_fu_1584_p1;
wire   [53:0] tmp_49_i_fu_1588_p2;
wire   [0:0] tmp_57_fu_1598_p3;
wire   [7:0] tmp_54_fu_1580_p1;
wire   [7:0] tmp_53_fu_1574_p1;
wire   [7:0] tmp_56_fu_1594_p1;
wire   [7:0] tmp_51_i_fu_1606_p3;
wire   [11:0] tmp_54_i_fu_1632_p2;
wire   [31:0] tmp_63_cast_i_fu_1637_p1;
wire   [0:0] tmp_53_i_fu_1627_p2;
wire   [0:0] p_Result_s_fu_1641_p3;
wire   [7:0] p_Val2_3_fu_1620_p3;
wire   [0:0] qb_fu_1649_p3;
wire   [7:0] tmp_55_i_fu_1664_p1;
wire   [7:0] p_Val2_4_fu_1668_p2;
wire   [0:0] tmp_59_fu_1674_p3;
wire   [0:0] sel_tmp1_i_fu_1695_p2;
wire   [0:0] sel_tmp2_i_fu_1700_p2;
wire   [0:0] p_Result_9_fu_1656_p3;
wire   [0:0] sel_tmp3_i_fu_1705_p2;
wire   [7:0] sel_tmp_i_fu_1688_p3;
wire   [0:0] sel_tmp7_i_fu_1719_p2;
wire   [0:0] sel_tmp8_i_fu_1725_p2;
wire   [7:0] sel_tmp4_i_fu_1711_p3;
wire   [0:0] sel_tmp12_demorgan_i_fu_1739_p2;
wire   [0:0] sel_tmp12_i_fu_1743_p2;
wire   [0:0] sel_tmp13_i_fu_1749_p2;
wire   [7:0] tmp_52_i_fu_1614_p2;
wire   [7:0] sel_tmp9_i_fu_1731_p3;
wire   [0:0] tmp_47_not_i_fu_1762_p2;
wire   [0:0] not_sel_tmp28_i_fu_1767_p2;
wire   [0:0] rev_fu_1682_p2;
wire   [0:0] tmp12_fu_1773_p2;
wire  signed [11:0] pos1_fu_1785_p2;
wire  signed [11:0] pos2_fu_1794_p2;
wire   [7:0] p_Val2_5_fu_1754_p3;
wire   [0:0] tmp_61_fu_1817_p3;
wire  signed [31:0] pos1_cast_i_fu_1790_p1;
wire   [53:0] tmp_59_i_fu_1831_p1;
wire   [53:0] tmp_60_i_fu_1835_p2;
wire   [0:0] lD_fu_1841_p1;
wire   [0:0] rev1_fu_1825_p2;
wire   [0:0] tmp13_fu_1845_p2;
wire   [0:0] tmp_57_i_fu_1811_p2;
wire   [0:0] tmp_63_fu_1857_p3;
wire   [0:0] tmp_62_i_fu_1871_p2;
wire   [0:0] rev2_fu_1865_p2;
wire  signed [31:0] pos2_cast_i_fu_1799_p1;
wire   [53:0] tmp_63_i_fu_1883_p1;
wire   [53:0] Range2_V_1_fu_1887_p2;
wire   [53:0] r_V_fu_1893_p2;
wire   [0:0] or_cond173_i_i_i_fu_1877_p2;
wire   [0:0] Range2_all_ones_fu_1899_p2;
wire   [0:0] Range2_all_ones_1_i_s_fu_1905_p3;
wire   [0:0] Range1_all_ones_1_fu_1851_p2;
wire   [0:0] tmp_64_i_fu_1925_p2;
wire   [0:0] Range1_all_zeros_fu_1931_p2;
wire   [0:0] Range1_all_zeros_1_fu_1949_p2;
wire   [0:0] tmp_62_i_not_fu_1961_p2;
wire   [0:0] tmp_66_i_fu_1943_p2;
wire   [0:0] sel_tmp33_i_fu_1967_p2;
wire   [0:0] sel_tmp34_i_fu_1973_p2;
wire   [0:0] or_cond175_i_i_i_fu_1913_p2;
wire   [0:0] Range1_all_ones_fu_1919_p2;
wire   [0:0] sel_tmp35_i_fu_1979_p3;
wire   [0:0] p_177_i_i_i_fu_1955_p2;
wire   [0:0] p_180_i_i_i_fu_1937_p2;
wire   [0:0] sel_tmp39_i_fu_1995_p3;
wire   [0:0] carry_1_i_i_i_fu_1779_p2;
wire   [0:0] Range1_all_ones_2_i_s_fu_1987_p3;
wire   [0:0] Range1_all_zeros_2_i_fu_2003_p3;
wire   [0:0] Range1_all_ones_2_i_fu_2019_p2;
wire   [0:0] p_Result_10_fu_1803_p3;
wire   [0:0] sel_tmp41_i_fu_2031_p2;
wire   [0:0] tmp14_fu_2037_p2;
wire   [0:0] sel_tmp47_i_fu_2048_p2;
wire   [0:0] tmp_67_i_fu_2025_p2;
wire   [0:0] sel_tmp46_i_fu_2043_p2;
wire   [0:0] tmp15_fu_2061_p2;
wire   [0:0] deleted_zeros_fu_2011_p3;
wire   [0:0] underflow_fu_2053_p3;
wire   [0:0] p_179_demorgan_i_i_i_fu_2066_p2;
wire   [0:0] underflow_not_i_fu_2072_p2;
wire   [0:0] p_179_demorgan_i_i_no_fu_2084_p2;
wire   [0:0] brmerge_i_i_not_i_fu_2078_p2;
wire   [0:0] sel_tmp50_i_demorgan_fu_2104_p2;
wire   [0:0] sel_tmp50_i_fu_2110_p2;
wire   [0:0] sel_tmp51_i_fu_2116_p2;
wire   [0:0] tmp_demorgan_i_fu_1563_p2;
wire   [0:0] tmp_40_fu_2121_p2;
wire   [0:0] tmp_42_fu_2127_p2;
wire   [0:0] sel_tmp55_demorgan_i_fu_2141_p2;
wire   [0:0] brmerge_i_fu_2090_p2;
wire   [0:0] sel_tmp55_i_fu_2146_p2;
wire   [0:0] sel_tmp56_i_fu_2152_p2;
wire   [7:0] p_Val2_11_0_i_i_mux_fu_2096_p3;
wire   [7:0] sel_tmp52_i_fu_2133_p3;
wire   [7:0] val_V_fu_2158_p3;
wire   [0:0] tmp_21_fu_2166_p2;
reg   [1:0] grp_fu_601_opcode;
wire    ap_block_pp3_stage1_00001;
wire    ap_block_pp3_stage0_00001;
reg   [57:0] ap_NS_fsm;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp3_stage2_subdone;
reg    ap_block_pp0;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_block_pp4;
reg    ap_enable_operation_177;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_enable_operation_213;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_enable_operation_220;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 58'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter7 = 1'b0;
#0 ap_enable_reg_pp4_iter8 = 1'b0;
end

threshold_hls_arreOg #(
    .DataWidth( 2 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_array_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hls_array_data_V_address0),
    .ce0(hls_array_data_V_ce0),
    .we0(hls_array_data_V_we0),
    .d0(hls_array_data_V_d0),
    .q0(hls_array_data_V_q0)
);

threshold_hist_oufYi #(
    .DataWidth( 21 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hist_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hist_out_V_address0),
    .ce0(hist_out_V_ce0),
    .we0(hist_out_V_we0),
    .d0(21'd0),
    .q0(hist_out_V_q0),
    .address1(hist_out_V_address1),
    .ce1(hist_out_V_ce1),
    .we1(hist_out_V_we1),
    .d1(hist_out_V_d1),
    .q1(hist_out_V_q1)
);

threshold_pixelPro #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
pixelPro_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pixelPro_address0),
    .ce0(pixelPro_ce0),
    .we0(pixelPro_we0),
    .d0(pixelPro_d0),
    .q0(pixelPro_q0)
);

hls_counter_colorg8j #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_counter_colorg8j_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_601_p0),
    .din1(grp_fu_601_p1),
    .opcode(grp_fu_601_opcode),
    .ce(1'b1),
    .dout(grp_fu_601_p2)
);

hls_counter_colorhbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_counter_colorhbi_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_611_p0),
    .din1(grp_fu_611_p1),
    .ce(1'b1),
    .dout(grp_fu_611_p2)
);

hls_counter_coloribs #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_counter_coloribs_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_616_p0),
    .din1(grp_fu_616_p1),
    .ce(1'b1),
    .dout(grp_fu_616_p2)
);

hls_counter_colorjbC #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_counter_colorjbC_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_624_p0),
    .ce(1'b1),
    .dout(grp_fu_624_p1)
);

hls_counter_colorkbM #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_counter_colorkbM_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_627_p0),
    .ce(1'b1),
    .dout(grp_fu_627_p1)
);

hls_counter_colorlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
hls_counter_colorlbW_U30(
    .din0(reg_675),
    .dout(d_assign_fu_631_p1)
);

hls_counter_colormb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
hls_counter_colormb6_U31(
    .din0(reg_675),
    .din1(deltaMax_reg_509),
    .opcode(5'd2),
    .dout(tmp_48_fu_634_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state85)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_fu_766_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_1_fu_751_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state5)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_1_fu_751_p2 == 1'd1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state5))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_1_fu_751_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state21)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp2_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state37) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp3_stage3_subdone) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp3_stage4_subdone) & (1'b1 == ap_CS_fsm_pp3_stage4)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state76) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd1))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state76)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state76);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter8 <= ap_enable_reg_pp4_iter7;
        end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd1))) begin
            ap_enable_reg_pp4_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_reg_2278 == 1'd1))) begin
        addr_last_V_fu_276 <= addr_win_val_0_V_3_fu_272;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
        addr_last_V_fu_276 <= 8'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_reg_2278 == 1'd1))) begin
        addr_win_val_0_V_1_fu_268 <= addr_win_val_V_0_0_2_fu_994_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
        addr_win_val_0_V_1_fu_268 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_reg_2278 == 1'd1))) begin
        addr_win_val_0_V_2_fu_264 <= addr_win_val_0_V_1_fu_268;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
        addr_win_val_0_V_2_fu_264 <= 8'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_reg_2278 == 1'd1))) begin
        addr_win_val_0_V_3_fu_272 <= addr_win_val_0_V_2_fu_264;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
        addr_win_val_0_V_3_fu_272 <= 8'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_1_fu_751_p2 == 1'd0))) begin
        col_assign_reg_463 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_fu_1164_p2 == 1'd0))) begin
        col_assign_reg_463 <= m_fu_1170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        deltaMax_reg_509 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        deltaMax_reg_509 <= deltaMax_1_fu_1386_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1))) begin
        hist_win_val_0_V_1_1_fu_280 <= hist_win_val_0_V_1_fu_1094_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
        hist_win_val_0_V_1_1_fu_280 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1))) begin
        hist_win_val_0_V_2_1_fu_288 <= hist_win_val_0_V_2_fu_1073_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
        hist_win_val_0_V_2_1_fu_288 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1))) begin
        hist_win_val_0_V_3_1_fu_292 <= hist_win_val_0_V_3_fu_1053_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
        hist_win_val_0_V_3_1_fu_292 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1))) begin
        hist_win_val_V_fu_284 <= hist_win_val_V_0_0_2_fu_1128_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
        hist_win_val_V_fu_284 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i1_reg_430 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd0))) begin
        i1_reg_430 <= i_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
        i2_reg_441 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_reg_441 <= i_1_reg_2273;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond4_fu_1208_p2 == 1'd0))) begin
        i5_reg_474 <= i_2_fu_1214_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        i5_reg_474 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd1))) begin
        i9_reg_590 <= 9'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond_fu_1394_p2 == 1'd0))) begin
        i9_reg_590 <= i_3_fu_1400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond6_reg_2401 == 1'd0))) begin
        j7_reg_545 <= j_2_reg_2405;
    end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd0))) begin
        j7_reg_545 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        j8_reg_568 <= j_5_cast8_reg_2382;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        j8_reg_568 <= j_3_reg_2443;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        j_4_reg_485 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        j_4_reg_485 <= i_4_reg_2396;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_fu_766_p2 == 1'd1))) begin
        j_reg_452 <= j_1_fu_771_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_1_fu_751_p2 == 1'd1))) begin
        j_reg_452 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        p_2_reg_497 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        p_2_reg_497 <= threshold_V_1_fu_1379_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd1))) begin
        p_4_reg_578 <= 21'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (exitcond_reg_2468_pp4_iter1_reg == 1'd0))) begin
        p_4_reg_578 <= sum_V_reg_2487;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (exitcond6_reg_2401_pp3_iter1_reg == 1'd0))) begin
        u0tmp_reg_533 <= grp_fu_601_p2;
    end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd0))) begin
        u0tmp_reg_533 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        u1tmp_reg_556 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        u1tmp_reg_556 <= grp_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (exitcond6_reg_2401_pp3_iter1_reg == 1'd0))) begin
        w0_reg_521 <= w0_1_reg_2420;
    end else if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd0))) begin
        w0_reg_521 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond_reg_2468_pp4_iter6_reg == 1'd0))) begin
        F2_2_reg_2537 <= F2_2_fu_1497_p3;
        F2_reg_2523 <= F2_fu_1479_p2;
        icmp1_reg_2555 <= icmp1_fu_1527_p2;
        man_V_1_reg_2512 <= man_V_1_fu_1467_p2;
        p_Result_7_reg_2498 <= ireg_V_fu_1421_p1[32'd63];
        p_Result_8_reg_2507[51 : 0] <= p_Result_8_fu_1463_p1[51 : 0];
        tmp_40_i_reg_2517 <= tmp_40_i_fu_1473_p2;
        tmp_41_i_reg_2531 <= tmp_41_i_fu_1485_p2;
        tmp_43_i_reg_2543 <= tmp_43_i_fu_1505_p2;
        tmp_45_i_reg_2550 <= tmp_45_i_fu_1511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_reg_2278 == 1'd1))) begin
        addr_win_val_0_V_2_1_reg_2287 <= addr_win_val_0_V_2_fu_264;
        p_0337_s_fu_260 <= p_0337_2_be_2_fu_930_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond4_reg_2353 <= exitcond4_fu_1208_p2;
        exitcond4_reg_2353_pp2_iter1_reg <= exitcond4_reg_2353;
        tmp_13_reg_2362_pp2_iter1_reg[8 : 0] <= tmp_13_reg_2362[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond4_reg_2353_pp2_iter10_reg <= exitcond4_reg_2353_pp2_iter9_reg;
        exitcond4_reg_2353_pp2_iter11_reg <= exitcond4_reg_2353_pp2_iter10_reg;
        exitcond4_reg_2353_pp2_iter12_reg <= exitcond4_reg_2353_pp2_iter11_reg;
        exitcond4_reg_2353_pp2_iter2_reg <= exitcond4_reg_2353_pp2_iter1_reg;
        exitcond4_reg_2353_pp2_iter3_reg <= exitcond4_reg_2353_pp2_iter2_reg;
        exitcond4_reg_2353_pp2_iter4_reg <= exitcond4_reg_2353_pp2_iter3_reg;
        exitcond4_reg_2353_pp2_iter5_reg <= exitcond4_reg_2353_pp2_iter4_reg;
        exitcond4_reg_2353_pp2_iter6_reg <= exitcond4_reg_2353_pp2_iter5_reg;
        exitcond4_reg_2353_pp2_iter7_reg <= exitcond4_reg_2353_pp2_iter6_reg;
        exitcond4_reg_2353_pp2_iter8_reg <= exitcond4_reg_2353_pp2_iter7_reg;
        exitcond4_reg_2353_pp2_iter9_reg <= exitcond4_reg_2353_pp2_iter8_reg;
        tmp_13_reg_2362_pp2_iter10_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter9_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter11_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter10_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter12_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter11_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter2_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter1_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter3_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter2_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter4_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter3_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter5_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter4_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter6_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter5_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter7_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter6_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter8_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter7_reg[8 : 0];
        tmp_13_reg_2362_pp2_iter9_reg[8 : 0] <= tmp_13_reg_2362_pp2_iter8_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond6_reg_2401 <= exitcond6_fu_1253_p2;
        exitcond6_reg_2401_pp3_iter1_reg <= exitcond6_reg_2401;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond_reg_2468 <= exitcond_fu_1394_p2;
        exitcond_reg_2468_pp4_iter1_reg <= exitcond_reg_2468;
        tmp_18_reg_2477_pp4_iter1_reg[8 : 0] <= tmp_18_reg_2477[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        exitcond_reg_2468_pp4_iter2_reg <= exitcond_reg_2468_pp4_iter1_reg;
        exitcond_reg_2468_pp4_iter3_reg <= exitcond_reg_2468_pp4_iter2_reg;
        exitcond_reg_2468_pp4_iter4_reg <= exitcond_reg_2468_pp4_iter3_reg;
        exitcond_reg_2468_pp4_iter5_reg <= exitcond_reg_2468_pp4_iter4_reg;
        exitcond_reg_2468_pp4_iter6_reg <= exitcond_reg_2468_pp4_iter5_reg;
        exitcond_reg_2468_pp4_iter7_reg <= exitcond_reg_2468_pp4_iter6_reg;
        reg_675_pp4_iter7_reg <= reg_675;
        tmp_18_reg_2477_pp4_iter2_reg[8 : 0] <= tmp_18_reg_2477_pp4_iter1_reg[8 : 0];
        tmp_18_reg_2477_pp4_iter3_reg[8 : 0] <= tmp_18_reg_2477_pp4_iter2_reg[8 : 0];
        tmp_18_reg_2477_pp4_iter4_reg[8 : 0] <= tmp_18_reg_2477_pp4_iter3_reg[8 : 0];
        tmp_18_reg_2477_pp4_iter5_reg[8 : 0] <= tmp_18_reg_2477_pp4_iter4_reg[8 : 0];
        tmp_18_reg_2477_pp4_iter6_reg[8 : 0] <= tmp_18_reg_2477_pp4_iter5_reg[8 : 0];
        tmp_18_reg_2477_pp4_iter7_reg[8 : 0] <= tmp_18_reg_2477_pp4_iter6_reg[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_reg_2273 <= i_1_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        i_4_reg_2396 <= i_4_fu_1243_p2;
        j_5_cast8_reg_2382[8 : 0] <= j_5_cast8_fu_1229_p1[8 : 0];
        j_5_cast_reg_2387[8 : 0] <= j_5_cast_fu_1233_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_reg_2278 == 1'd1))) begin
        icmp_reg_2325 <= icmp_fu_960_p2;
        sel_tmp5_reg_2330 <= sel_tmp5_fu_980_p2;
        tmp_23_reg_2297 <= tmp_23_fu_896_p2;
        tmp_24_reg_2315 <= tmp_24_fu_938_p2;
        tmp_45_1_reg_2303 <= tmp_45_1_fu_910_p2;
        tmp_47_2_reg_2309 <= tmp_47_2_fu_924_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        j_2_reg_2405 <= j_2_fu_1258_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        j_3_reg_2443 <= j_3_fu_1289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1))) begin
        p_0334_s_fu_256 <= p_0334_2_be_2_fu_1101_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state12) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (exitcond6_reg_2401 == 1'd0) & (1'b0 == ap_block_pp3_stage2_11001)))) begin
        reg_651 <= grp_fu_627_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter4 == 1'b1) & (exitcond_reg_2468_pp4_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (exitcond4_reg_2353_pp2_iter3_reg == 1'd0)))) begin
        reg_657 <= grp_fu_624_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter12 == 1'b1) & (exitcond4_reg_2353_pp2_iter11_reg == 1'd0)))) begin
        reg_663 <= grp_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond6_reg_2401 == 1'd0)))) begin
        reg_669 <= pixelPro_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state51) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1) & (exitcond_reg_2468_pp4_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage4_11001) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond6_reg_2401 == 1'd0)))) begin
        reg_675 <= grp_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_683 <= grp_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        scale_reg_2348 <= grp_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond_reg_2468 == 1'd0))) begin
        sum_V_reg_2487 <= sum_V_fu_1411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) & (exitcond7_fu_1274_p2 == 1'd1))) begin
        threshold_V_reg_2433 <= threshold_V_fu_1280_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond4_fu_1208_p2 == 1'd0))) begin
        tmp_13_reg_2362[8 : 0] <= tmp_13_fu_1220_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond_fu_1394_p2 == 1'd0))) begin
        tmp_18_reg_2477[8 : 0] <= tmp_18_fu_1406_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_reg_2278 <= tmp_2_fu_766_p2;
        tmp_2_reg_2278_pp0_iter1_reg <= tmp_2_reg_2278;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond4_reg_2353 == 1'd0))) begin
        tmp_V_reg_2372 <= hist_out_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        u1_reg_2453 <= grp_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage4_11001) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond6_reg_2401 == 1'd0))) begin
        w0_1_reg_2420 <= grp_fu_601_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_1208_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond6_fu_1253_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state37 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state37 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_1394_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state76 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state76 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter8 == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond6_reg_2401 == 1'd0))) begin
        ap_phi_mux_j7_phi_fu_549_p4 = j_2_reg_2405;
    end else begin
        ap_phi_mux_j7_phi_fu_549_p4 = j7_reg_545;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (exitcond_reg_2468_pp4_iter1_reg == 1'd0))) begin
        ap_phi_mux_p_4_phi_fu_582_p4 = sum_V_reg_2487;
    end else begin
        ap_phi_mux_p_4_phi_fu_582_p4 = p_4_reg_578;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (exitcond6_reg_2401_pp3_iter1_reg == 1'd0))) begin
        ap_phi_mux_w0_phi_fu_525_p4 = w0_1_reg_2420;
    end else begin
        ap_phi_mux_w0_phi_fu_525_p4 = w0_reg_521;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | ((1'b1 == ap_CS_fsm_state47) & (exitcond7_fu_1274_p2 == 1'd1)))) begin
        grp_fu_601_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state52) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond6_reg_2401 == 1'd0) & (1'b0 == ap_block_pp3_stage0_00001)) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond6_reg_2401 == 1'd0) & (1'b0 == ap_block_pp3_stage1_00001)))) begin
        grp_fu_601_opcode = 2'd0;
    end else begin
        grp_fu_601_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_601_p0 = reg_663;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_601_p0 = u1tmp_reg_556;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_601_p0 = 32'd1065353216;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_601_p0 = u0tmp_reg_533;
    end else if (((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_601_p0 = ap_phi_mux_w0_phi_fu_525_p4;
    end else begin
        grp_fu_601_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_601_p1 = u1_reg_2453;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_601_p1 = w0_reg_521;
    end else if (((1'b1 == ap_CS_fsm_state52) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        grp_fu_601_p1 = reg_675;
    end else if (((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_601_p1 = pixelPro_q0;
    end else begin
        grp_fu_601_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        grp_fu_611_p0 = reg_657;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state71))) begin
        grp_fu_611_p0 = reg_675;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_611_p0 = w0_reg_521;
    end else if (((1'b1 == ap_CS_fsm_state50) | ((1'b0 == ap_block_pp3_stage3) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        grp_fu_611_p0 = reg_651;
    end else begin
        grp_fu_611_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter5 == 1'b1))) begin
        grp_fu_611_p1 = scale_reg_2348;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_611_p1 = reg_683;
    end else if (((1'b1 == ap_CS_fsm_state50) | ((1'b0 == ap_block_pp3_stage3) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        grp_fu_611_p1 = reg_669;
    end else begin
        grp_fu_611_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_616_p0 = u1tmp_reg_556;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_616_p0 = u0tmp_reg_533;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        grp_fu_616_p0 = reg_657;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_616_p0 = 32'd1132396544;
    end else begin
        grp_fu_616_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_616_p1 = reg_683;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_616_p1 = w0_reg_521;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter5 == 1'b1)))) begin
        grp_fu_616_p1 = reg_651;
    end else begin
        grp_fu_616_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        grp_fu_624_p0 = tmp_39_fu_1417_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        grp_fu_624_p0 = tmp_38_fu_1225_p1;
    end else begin
        grp_fu_624_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_627_p0 = j8_reg_568;
    end else if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        grp_fu_627_p0 = j7_cast7_fu_1264_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_627_p0 = tmp_s_fu_1204_p2;
    end else begin
        grp_fu_627_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        hist_out_V_address0 = tmp_13_fu_1220_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        hist_out_V_address0 = tmp_6_fu_786_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hist_out_V_address0 = tmp_8_fu_701_p1;
    end else begin
        hist_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        hist_out_V_address1 = tmp_18_fu_1406_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        hist_out_V_address1 = tmp_7_fu_1190_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        hist_out_V_address1 = tmp_34_fu_1135_p1;
    end else begin
        hist_out_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        hist_out_V_ce0 = 1'b1;
    end else begin
        hist_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        hist_out_V_ce1 = 1'b1;
    end else begin
        hist_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        hist_out_V_d1 = hist_win_val_V_load_s_fu_1195_p3;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        hist_out_V_d1 = hist_win_val_0_V_2_fu_1073_p3;
    end else begin
        hist_out_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd0))) begin
        hist_out_V_we0 = 1'b1;
    end else begin
        hist_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (exitcond3_fu_1164_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1)))) begin
        hist_out_V_we1 = 1'b1;
    end else begin
        hist_out_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        hls_array_data_V_address0 = 8'd0;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter8 == 1'b1))) begin
        hls_array_data_V_address0 = tmp_18_reg_2477_pp4_iter7_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        hls_array_data_V_address0 = tmp_6_fu_786_p1;
    end else begin
        hls_array_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter8 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        hls_array_data_V_ce0 = 1'b1;
    end else begin
        hls_array_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        hls_array_data_V_d0 = 2'd0;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter8 == 1'b1))) begin
        hls_array_data_V_d0 = data_val_V_cast_fu_2172_p3;
    end else begin
        hls_array_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter8 == 1'b1) & (exitcond_reg_2468_pp4_iter7_reg == 1'd0)))) begin
        hls_array_data_V_we0 = 1'b1;
    end else begin
        hls_array_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_reg_2278 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_2_reg_2278 == 1'd1))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        pixelPro_address0 = tmp_36_fu_1284_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        pixelPro_address0 = tmp_26_fu_1269_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter13 == 1'b1))) begin
        pixelPro_address0 = tmp_13_reg_2362_pp2_iter12_reg;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pixelPro_address0 = tmp_8_fu_701_p1;
    end else begin
        pixelPro_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        pixelPro_ce0 = 1'b1;
    end else begin
        pixelPro_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter13 == 1'b1))) begin
        pixelPro_d0 = reg_663;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pixelPro_d0 = 32'd0;
    end else begin
        pixelPro_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1) & (exitcond4_reg_2353_pp2_iter12_reg == 1'd0)))) begin
        pixelPro_we0 = 1'b1;
    end else begin
        pixelPro_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_689_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_1_fu_751_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_fu_1164_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond4_fu_1208_p2 == 1'd1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond4_fu_1208_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (exitcond5_fu_1237_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond6_fu_1253_p2 == 1'd1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond6_fu_1253_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((~((1'b0 == ap_block_pp3_stage3_subdone) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b0)) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end else if (((1'b0 == ap_block_pp3_stage3_subdone) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_pp3_stage4 : begin
            if ((1'b0 == ap_block_pp3_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (exitcond7_fu_1274_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond_fu_1394_p2 == 1'd1)) & ~((ap_enable_reg_pp4_iter7 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter7 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter8 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond_fu_1394_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_2_cast_i_fu_1577_p1 = F2_2_reg_2537;

assign F2_2_fu_1497_p3 = ((tmp_41_i_fu_1485_p2[0:0] === 1'b1) ? F2_fu_1479_p2 : tmp_42_i_fu_1491_p2);

assign F2_fu_1479_p2 = (12'd1075 - tmp_i_fu_1447_p1);

assign Range1_all_ones_1_fu_1851_p2 = (tmp_57_i_fu_1811_p2 & tmp13_fu_1845_p2);

assign Range1_all_ones_2_i_fu_2019_p2 = (carry_1_i_i_i_fu_1779_p2 & Range1_all_ones_2_i_s_fu_1987_p3);

assign Range1_all_ones_2_i_s_fu_1987_p3 = ((or_cond175_i_i_i_fu_1913_p2[0:0] === 1'b1) ? Range1_all_ones_fu_1919_p2 : sel_tmp35_i_fu_1979_p3);

assign Range1_all_ones_fu_1919_p2 = (Range2_all_ones_1_i_s_fu_1905_p3 & Range1_all_ones_1_fu_1851_p2);

assign Range1_all_zeros_1_fu_1949_p2 = ((p_Val2_s_fu_1569_p3 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_i_fu_2003_p3 = ((or_cond175_i_i_i_fu_1913_p2[0:0] === 1'b1) ? p_180_i_i_i_fu_1937_p2 : sel_tmp39_i_fu_1995_p3);

assign Range1_all_zeros_fu_1931_p2 = (1'd1 ^ Range1_all_ones_1_fu_1851_p2);

assign Range2_V_1_fu_1887_p2 = p_Val2_s_fu_1569_p3 >> tmp_63_i_fu_1883_p1;

assign Range2_all_ones_1_i_s_fu_1905_p3 = ((or_cond173_i_i_i_fu_1877_p2[0:0] === 1'b1) ? Range2_all_ones_fu_1899_p2 : rev2_fu_1865_p2);

assign Range2_all_ones_fu_1899_p2 = ((Range2_V_1_fu_1887_p2 == r_V_fu_1893_p2) ? 1'b1 : 1'b0);

assign addr_V_1_0337_2_be_fu_916_p3 = ((tmp_45_1_fu_910_p2[0:0] === 1'b1) ? addr_win_val_0_V_2_fu_264 : p_0337_2_be_fu_902_p3);

assign addr_win_val_V_0_0_2_fu_994_p3 = ((sel_tmp5_fu_980_p2[0:0] === 1'b1) ? addr_last_V_fu_276 : sel_tmp8_fu_986_p3);

assign addr_win_val_V_load_s_fu_1182_p3 = ((cond_fu_1176_p2[0:0] === 1'b1) ? addr_win_val_0_V_1_fu_268 : addr_win_val_0_V_2_fu_264);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage4 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_2_reg_2278 == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_2_reg_2278 == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_2_reg_2278 == 1'd1)));
end

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3 = (((1'b1 == ap_block_pp3_stage3_subdone) & (ap_ST_fsm_pp3_stage3 == ap_CS_fsm)) | ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm)) | ((1'b1 == ap_block_pp3_stage4_subdone) & (ap_ST_fsm_pp3_stage4 == ap_CS_fsm)) | ((1'b1 == ap_block_pp3_stage1_subdone) & (ap_ST_fsm_pp3_stage1 == ap_CS_fsm)) | ((1'b1 == ap_block_pp3_stage2_subdone) & (ap_ST_fsm_pp3_stage2 == ap_CS_fsm)));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4 = ((1'b1 == ap_block_pp4_stage0_subdone) & (ap_ST_fsm_pp4_stage0 == ap_CS_fsm));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state21_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp3_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp3_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((p_src_data_stream_V_empty_n == 1'b0) & (tmp_2_reg_2278 == 1'd1));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = ((p_dst_data_stream_V_full_n == 1'b0) & (tmp_2_reg_2278_pp0_iter1_reg == 1'd1));
end

assign ap_block_state76_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp4_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp4_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_177 = (tmp_2_reg_2278 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_213 = (tmp_2_reg_2278_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_220 = (tmp_2_reg_2278_pp0_iter1_reg == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_ready = internal_ap_ready;

assign brmerge_i_fu_2090_p2 = (underflow_not_i_fu_2072_p2 | p_179_demorgan_i_i_no_fu_2084_p2);

assign brmerge_i_i_not_i_fu_2078_p2 = (underflow_not_i_fu_2072_p2 & p_179_demorgan_i_i_i_fu_2066_p2);

assign carry_1_i_i_i_fu_1779_p2 = (tmp12_fu_1773_p2 & sel_tmp3_i_fu_1705_p2);

assign cond_fu_1176_p2 = ((col_assign_reg_463 == 2'd0) ? 1'b1 : 1'b0);

assign data_val_V_cast_fu_2172_p3 = ((tmp_21_fu_2166_p2[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign deleted_zeros_fu_2011_p3 = ((carry_1_i_i_i_fu_1779_p2[0:0] === 1'b1) ? Range1_all_ones_2_i_s_fu_1987_p3 : Range1_all_zeros_2_i_fu_2003_p3);

assign deltaMax_1_fu_1386_p3 = ((tmp_49_fu_1373_p2[0:0] === 1'b1) ? reg_675 : deltaMax_reg_509);

assign deltaMax_to_int_fu_1313_p1 = deltaMax_reg_509;

assign deltaTmp_to_int_fu_1295_p1 = reg_675;

assign exitcond2_fu_689_p2 = ((i1_reg_430 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond3_fu_1164_p2 = ((col_assign_reg_463 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond4_fu_1208_p2 = ((i5_reg_474 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond5_fu_1237_p2 = ((j_4_reg_485 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond6_fu_1253_p2 = ((j7_cast_fu_1249_p1 == j_5_cast_reg_2387) ? 1'b1 : 1'b0);

assign exitcond7_fu_1274_p2 = ((j8_reg_568 == 32'd256) ? 1'b1 : 1'b0);

assign exitcond_fu_1394_p2 = ((i9_reg_590 == 9'd256) ? 1'b1 : 1'b0);

assign exp_tmp_V_fu_1437_p4 = {{ireg_V_fu_1421_p1[62:52]}};

assign hist_flag_V_2_fu_1088_p2 = (hist_win_val_V_fu_284 + 21'd1);

assign hist_flag_V_fu_1047_p2 = (hist_win_val_0_V_2_1_fu_288 + 21'd1);

assign hist_last_V_fu_1041_p2 = (hist_win_val_0_V_3_1_fu_292 + 21'd1);

assign hist_w_V_172_0334_2_fu_1081_p3 = ((tmp_45_1_reg_2303[0:0] === 1'b1) ? hist_w_V_s_fu_1067_p2 : p_0334_2_be_fu_1060_p3);

assign hist_w_V_s_fu_1067_p2 = (hist_win_val_0_V_1_1_fu_280 + 21'd1);

assign hist_win_val_0_V_0_fu_1108_p2 = (hist_out_V_q0 + 21'd1);

assign hist_win_val_0_V_1_fu_1094_p3 = ((tmp_47_2_reg_2309[0:0] === 1'b1) ? hist_flag_V_2_fu_1088_p2 : hist_win_val_V_fu_284);

assign hist_win_val_0_V_2_fu_1073_p3 = ((tmp_45_1_reg_2303[0:0] === 1'b1) ? hist_w_V_s_fu_1067_p2 : hist_win_val_0_V_1_1_fu_280);

assign hist_win_val_0_V_3_fu_1053_p3 = ((tmp_23_reg_2297[0:0] === 1'b1) ? hist_flag_V_fu_1047_p2 : hist_win_val_0_V_2_1_fu_288);

assign hist_win_val_V_0_0_2_fu_1128_p3 = ((sel_tmp5_reg_2330[0:0] === 1'b1) ? hist_last_V_fu_1041_p2 : sel_tmp9_fu_1121_p3);

assign hist_win_val_V_load_s_fu_1195_p3 = ((cond_fu_1176_p2[0:0] === 1'b1) ? hist_win_val_V_fu_284 : hist_win_val_0_V_1_1_fu_280);

assign i2_cast_fu_747_p1 = i2_reg_441;

assign i_1_fu_756_p2 = (i2_reg_441 + 31'd1);

assign i_2_fu_1214_p2 = (i5_reg_474 + 9'd1);

assign i_3_fu_1400_p2 = (i9_reg_590 + 9'd1);

assign i_4_fu_1243_p2 = (j_4_reg_485 + 9'd1);

assign i_fu_695_p2 = (i1_reg_430 + 9'd1);

assign icmp1_fu_1527_p2 = ((tmp_55_fu_1517_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_fu_960_p2 = ((tmp_30_fu_950_p4 != 2'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_1421_p1 = d_assign_fu_631_p1;

assign j7_cast7_fu_1264_p1 = ap_phi_mux_j7_phi_fu_549_p4;

assign j7_cast_fu_1249_p1 = ap_phi_mux_j7_phi_fu_549_p4;

assign j_1_fu_771_p2 = (j_reg_452 + 31'd1);

assign j_2_fu_1258_p2 = (ap_phi_mux_j7_phi_fu_549_p4 + 8'd1);

assign j_3_fu_1289_p2 = ($signed(j8_reg_568) + $signed(32'd1));

assign j_5_cast8_fu_1229_p1 = j_4_reg_485;

assign j_5_cast_fu_1233_p1 = j_4_reg_485;

assign j_cast_fu_762_p1 = j_reg_452;

assign lD_fu_1841_p1 = tmp_60_i_fu_1835_p2[0:0];

assign m_fu_1170_p2 = (col_assign_reg_463 + 2'd1);

assign man_V_1_fu_1467_p2 = (54'd0 - p_Result_8_fu_1463_p1);

assign not_sel_tmp28_i_fu_1767_p2 = (tmp_47_not_i_fu_1762_p2 | sel_tmp12_demorgan_i_fu_1739_p2);

assign notlhs1_fu_1349_p2 = ((tmp_43_fu_1317_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_1331_p2 = ((tmp_41_fu_1299_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_1355_p2 = ((tmp_65_fu_1327_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_1337_p2 = ((tmp_64_fu_1309_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_cond173_i_i_i_fu_1877_p2 = (tmp_62_i_fu_1871_p2 & rev2_fu_1865_p2);

assign or_cond175_i_i_i_fu_1913_p2 = (tmp_62_i_fu_1871_p2 & rev1_fu_1825_p2);

assign p_0334_2_be_2_fu_1101_p3 = ((tmp_47_2_reg_2309[0:0] === 1'b1) ? hist_flag_V_2_fu_1088_p2 : hist_w_V_172_0334_2_fu_1081_p3);

assign p_0334_2_be_fu_1060_p3 = ((tmp_23_reg_2297[0:0] === 1'b1) ? hist_flag_V_fu_1047_p2 : p_0334_s_fu_256);

assign p_0337_2_be_2_fu_930_p3 = ((tmp_47_2_fu_924_p2[0:0] === 1'b1) ? addr_win_val_0_V_1_fu_268 : addr_V_1_0337_2_be_fu_916_p3);

assign p_0337_2_be_fu_902_p3 = ((tmp_23_fu_896_p2[0:0] === 1'b1) ? addr_win_val_0_V_3_fu_272 : p_0337_s_fu_260);

assign p_177_i_i_i_fu_1955_p2 = (rev1_fu_1825_p2 | Range1_all_zeros_1_fu_1949_p2);

assign p_179_demorgan_i_i_i_fu_2066_p2 = (tmp15_fu_2061_p2 | deleted_zeros_fu_2011_p3);

assign p_179_demorgan_i_i_no_fu_2084_p2 = (p_179_demorgan_i_i_i_fu_2066_p2 ^ 1'd1);

assign p_180_i_i_i_fu_1937_p2 = (tmp_64_i_fu_1925_p2 & Range1_all_zeros_fu_1931_p2);

assign p_3_fu_882_p3 = ((tmp_20_fu_876_p2[0:0] === 1'b1) ? sel_tmp3_cast_fu_868_p3 : sel_tmp_fu_830_p3);

assign p_Result_10_fu_1803_p3 = p_Val2_5_fu_1754_p3[32'd7];

assign p_Result_8_fu_1463_p1 = tmp_26_i_fu_1455_p3;

assign p_Result_9_fu_1656_p3 = p_Val2_3_fu_1620_p3[32'd7];

assign p_Result_s_fu_1641_p3 = p_Val2_s_fu_1569_p3[tmp_63_cast_i_fu_1637_p1];

assign p_Val2_11_0_i_i_mux_fu_2096_p3 = ((brmerge_i_i_not_i_fu_2078_p2[0:0] === 1'b1) ? p_Val2_5_fu_1754_p3 : 8'd255);

assign p_Val2_1_fu_1533_p1 = reg_675_pp4_iter7_reg;

assign p_Val2_3_fu_1620_p3 = ((tmp_45_i_reg_2550[0:0] === 1'b1) ? tmp_56_fu_1594_p1 : tmp_51_i_fu_1606_p3);

assign p_Val2_4_fu_1668_p2 = (p_Val2_3_fu_1620_p3 + tmp_55_i_fu_1664_p1);

assign p_Val2_5_fu_1754_p3 = ((sel_tmp13_i_fu_1749_p2[0:0] === 1'b1) ? tmp_52_i_fu_1614_p2 : sel_tmp9_i_fu_1731_p3);

assign p_Val2_s_fu_1569_p3 = ((p_Result_7_reg_2498[0:0] === 1'b1) ? man_V_1_reg_2512 : p_Result_8_reg_2507);

assign p_cast_fu_816_p3 = ((tmp_9_fu_792_p2[0:0] === 1'b1) ? 3'd0 : 3'd3);

assign p_dst_data_stream_V_din = $signed(hls_array_data_V_q0);

assign pos1_cast_i_fu_1790_p1 = pos1_fu_1785_p2;

assign pos1_fu_1785_p2 = (12'd8 + F2_reg_2523);

assign pos2_cast_i_fu_1799_p1 = pos2_fu_1794_p2;

assign pos2_fu_1794_p2 = (12'd9 + F2_reg_2523);

assign qb_fu_1649_p3 = ((tmp_53_i_fu_1627_p2[0:0] === 1'b1) ? p_Result_7_reg_2498 : p_Result_s_fu_1641_p3);

assign r_V_fu_1893_p2 = 54'd18014398509481983 >> tmp_63_i_fu_1883_p1;

assign ret_V_fu_890_p2 = (p_3_fu_882_p3 + 3'd1);

assign rev1_fu_1825_p2 = (tmp_61_fu_1817_p3 ^ 1'd1);

assign rev2_fu_1865_p2 = (tmp_63_fu_1857_p3 ^ 1'd1);

assign rev_fu_1682_p2 = (tmp_59_fu_1674_p3 ^ 1'd1);

assign sel_tmp12_demorgan_i_fu_1739_p2 = (tmp_43_i_reg_2543 | tmp_41_i_reg_2531);

assign sel_tmp12_i_fu_1743_p2 = (sel_tmp12_demorgan_i_fu_1739_p2 ^ 1'd1);

assign sel_tmp13_i_fu_1749_p2 = (sel_tmp12_i_fu_1743_p2 & icmp1_reg_2555);

assign sel_tmp1_fu_838_p2 = (tmp_9_fu_792_p2 ^ 1'd1);

assign sel_tmp1_i_fu_1695_p2 = (tmp_43_i_reg_2543 ^ 1'd1);

assign sel_tmp2_fu_844_p2 = (tmp_23_1_fu_798_p2 & sel_tmp1_fu_838_p2);

assign sel_tmp2_i_fu_1700_p2 = (tmp_41_i_reg_2531 & sel_tmp1_i_fu_1695_p2);

assign sel_tmp33_i_fu_1967_p2 = (tmp_62_i_not_fu_1961_p2 | tmp_61_fu_1817_p3);

assign sel_tmp34_i_fu_1973_p2 = (tmp_66_i_fu_1943_p2 & sel_tmp33_i_fu_1967_p2);

assign sel_tmp35_i_fu_1979_p3 = ((sel_tmp34_i_fu_1973_p2[0:0] === 1'b1) ? Range1_all_ones_1_fu_1851_p2 : rev1_fu_1825_p2);

assign sel_tmp39_i_fu_1995_p3 = ((sel_tmp34_i_fu_1973_p2[0:0] === 1'b1) ? Range1_all_zeros_fu_1931_p2 : p_177_i_i_i_fu_1955_p2);

assign sel_tmp3_cast_fu_868_p3 = ((sel_tmp7_fu_862_p2[0:0] === 1'b1) ? 3'd2 : 3'd1);

assign sel_tmp3_i_fu_1705_p2 = (sel_tmp2_i_fu_1700_p2 & p_Result_9_fu_1656_p3);

assign sel_tmp41_i_fu_2031_p2 = (tmp_57_i_fu_1811_p2 ^ 1'd1);

assign sel_tmp46_i_fu_2043_p2 = (tmp14_fu_2037_p2 & p_Result_7_reg_2498);

assign sel_tmp47_i_fu_2048_p2 = (tmp_57_i_fu_1811_p2 & p_Result_7_reg_2498);

assign sel_tmp4_fu_974_p2 = (tmp_24_fu_938_p2 ^ 1'd1);

assign sel_tmp4_i_fu_1711_p3 = ((sel_tmp3_i_fu_1705_p2[0:0] === 1'b1) ? p_Val2_4_fu_1668_p2 : sel_tmp_i_fu_1688_p3);

assign sel_tmp50_i_demorgan_fu_2104_p2 = (tmp_i_i_i_i_fu_1551_p2 & tmp_i_i_i_i_20_fu_1557_p2);

assign sel_tmp50_i_fu_2110_p2 = (sel_tmp50_i_demorgan_fu_2104_p2 ^ 1'd1);

assign sel_tmp51_i_fu_2116_p2 = (tmp_40_i_reg_2517 & sel_tmp50_i_fu_2110_p2);

assign sel_tmp52_i_fu_2133_p3 = ((tmp_42_fu_2127_p2[0:0] === 1'b1) ? 8'd0 : p_Val2_5_fu_1754_p3);

assign sel_tmp55_demorgan_i_fu_2141_p2 = (tmp_demorgan_i_fu_1563_p2 | tmp_40_i_reg_2517);

assign sel_tmp55_i_fu_2146_p2 = (sel_tmp55_demorgan_i_fu_2141_p2 ^ 1'd1);

assign sel_tmp56_i_fu_2152_p2 = (sel_tmp55_i_fu_2146_p2 & brmerge_i_fu_2090_p2);

assign sel_tmp5_fu_980_p2 = (tmp_29_fu_944_p2 & sel_tmp4_fu_974_p2);

assign sel_tmp6_demorgan_fu_850_p2 = (tmp_9_fu_792_p2 | tmp_23_1_fu_798_p2);

assign sel_tmp6_fu_856_p2 = (sel_tmp6_demorgan_fu_850_p2 ^ 1'd1);

assign sel_tmp7_fu_862_p2 = (tmp_23_2_fu_804_p2 & sel_tmp6_fu_856_p2);

assign sel_tmp7_i_fu_1719_p2 = (p_Result_9_fu_1656_p3 ^ 1'd1);

assign sel_tmp8_fu_986_p3 = ((tmp_24_fu_938_p2[0:0] === 1'b1) ? p_src_data_stream_V_dout : storemerge_fu_966_p3);

assign sel_tmp8_i_fu_1725_p2 = (sel_tmp7_i_fu_1719_p2 & sel_tmp2_i_fu_1700_p2);

assign sel_tmp9_fu_1121_p3 = ((tmp_24_reg_2315[0:0] === 1'b1) ? hist_win_val_0_V_0_fu_1108_p2 : storemerge1_fu_1114_p3);

assign sel_tmp9_i_fu_1731_p3 = ((sel_tmp8_i_fu_1725_p2[0:0] === 1'b1) ? p_Val2_4_fu_1668_p2 : sel_tmp4_i_fu_1711_p3);

assign sel_tmp_fu_830_p3 = ((tmp_11_fu_824_p2[0:0] === 1'b1) ? p_cast_fu_816_p3 : 3'd4);

assign sel_tmp_i_fu_1688_p3 = ((tmp_43_i_reg_2543[0:0] === 1'b1) ? tmp_54_fu_1580_p1 : 8'd0);

assign start_out = real_start;

assign storemerge1_fu_1114_p3 = ((icmp_reg_2325[0:0] === 1'b1) ? p_0334_2_be_2_fu_1101_p3 : hist_win_val_0_V_2_fu_1073_p3);

assign storemerge_fu_966_p3 = ((icmp_fu_960_p2[0:0] === 1'b1) ? p_0337_2_be_2_fu_930_p3 : addr_win_val_0_V_2_fu_264);

assign sum_V_fu_1411_p2 = (hist_out_V_q1 + ap_phi_mux_p_4_phi_fu_582_p4);

assign threshold_V_1_fu_1379_p3 = ((tmp_49_fu_1373_p2[0:0] === 1'b1) ? threshold_V_reg_2433 : p_2_reg_497);

assign threshold_V_fu_1280_p1 = j_4_reg_485[7:0];

assign tmp12_fu_1773_p2 = (rev_fu_1682_p2 & not_sel_tmp28_i_fu_1767_p2);

assign tmp13_fu_1845_p2 = (rev1_fu_1825_p2 & lD_fu_1841_p1);

assign tmp14_fu_2037_p2 = (sel_tmp41_i_fu_2031_p2 & p_Result_10_fu_1803_p3);

assign tmp15_fu_2061_p2 = (sel_tmp41_i_fu_2031_p2 | p_Result_7_reg_2498);

assign tmp_11_fu_824_p2 = (tmp_9_fu_792_p2 | tmp_23_3_fu_810_p2);

assign tmp_13_fu_1220_p1 = i5_reg_474;

assign tmp_18_fu_1406_p1 = i9_reg_590;

assign tmp_1_fu_751_p1 = p_src_rows_V;

assign tmp_1_fu_751_p2 = (($signed(i2_cast_fu_747_p1) < $signed(tmp_1_fu_751_p1)) ? 1'b1 : 1'b0);

assign tmp_20_fu_876_p2 = (sel_tmp7_fu_862_p2 | sel_tmp2_fu_844_p2);

assign tmp_21_fu_2166_p2 = ((val_V_fu_2158_p3 > p_2_reg_497) ? 1'b1 : 1'b0);

assign tmp_23_1_fu_798_p2 = ((p_src_data_stream_V_dout == addr_win_val_0_V_2_fu_264) ? 1'b1 : 1'b0);

assign tmp_23_2_fu_804_p2 = ((p_src_data_stream_V_dout == addr_win_val_0_V_3_fu_272) ? 1'b1 : 1'b0);

assign tmp_23_3_fu_810_p2 = ((p_src_data_stream_V_dout == addr_last_V_fu_276) ? 1'b1 : 1'b0);

assign tmp_23_fu_896_p2 = ((ret_V_fu_890_p2 == 3'd3) ? 1'b1 : 1'b0);

assign tmp_24_fu_938_p2 = ((p_3_fu_882_p3 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_26_fu_1269_p1 = ap_phi_mux_j7_phi_fu_549_p4;

assign tmp_26_i_fu_1455_p3 = {{1'd1}, {tmp_52_fu_1451_p1}};

assign tmp_29_fu_944_p2 = ((p_3_fu_882_p3 == 3'd3) ? 1'b1 : 1'b0);

assign tmp_2_fu_766_p1 = p_src_cols_V;

assign tmp_2_fu_766_p2 = (($signed(j_cast_fu_762_p1) < $signed(tmp_2_fu_766_p1)) ? 1'b1 : 1'b0);

assign tmp_30_fu_950_p4 = {{p_3_fu_882_p3[2:1]}};

assign tmp_34_fu_1135_p1 = addr_win_val_0_V_2_1_reg_2287;

assign tmp_36_fu_1284_p1 = j8_reg_568;

assign tmp_38_fu_1225_p1 = tmp_V_reg_2372;

assign tmp_39_fu_1417_p1 = sum_V_reg_2487;

assign tmp_40_fu_2121_p2 = (tmp_demorgan_i_fu_1563_p2 | sel_tmp51_i_fu_2116_p2);

assign tmp_40_i_fu_1473_p2 = ((tmp_44_fu_1425_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_41_fu_1299_p4 = {{deltaTmp_to_int_fu_1295_p1[30:23]}};

assign tmp_41_i_fu_1485_p2 = (($signed(F2_fu_1479_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_42_fu_2127_p2 = (underflow_fu_2053_p3 | tmp_40_fu_2121_p2);

assign tmp_42_i_fu_1491_p2 = (12'd0 - F2_fu_1479_p2);

assign tmp_43_fu_1317_p4 = {{deltaMax_to_int_fu_1313_p1[30:23]}};

assign tmp_43_i_fu_1505_p2 = ((exp_tmp_V_fu_1437_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign tmp_44_fu_1425_p1 = ireg_V_fu_1421_p1[62:0];

assign tmp_45_1_fu_910_p2 = ((ret_V_fu_890_p2 == 3'd2) ? 1'b1 : 1'b0);

assign tmp_45_fu_1343_p2 = (notrhs_fu_1337_p2 | notlhs_fu_1331_p2);

assign tmp_45_i_fu_1511_p2 = ((F2_2_fu_1497_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_46_fu_1361_p2 = (notrhs1_fu_1355_p2 | notlhs1_fu_1349_p2);

assign tmp_47_2_fu_924_p2 = ((p_3_fu_882_p3 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_47_fu_1367_p2 = (tmp_46_fu_1361_p2 & tmp_45_fu_1343_p2);

assign tmp_47_not_i_fu_1762_p2 = (icmp1_reg_2555 ^ 1'd1);

assign tmp_48_i_fu_1584_p1 = $unsigned(F2_2_cast_i_fu_1577_p1);

assign tmp_49_fu_1373_p2 = (tmp_48_fu_634_p2 & tmp_47_fu_1367_p2);

assign tmp_49_i_fu_1588_p2 = $signed(p_Val2_s_fu_1569_p3) >>> tmp_48_i_fu_1584_p1;

assign tmp_51_i_fu_1606_p3 = ((tmp_57_fu_1598_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign tmp_52_fu_1451_p1 = ireg_V_fu_1421_p1[51:0];

assign tmp_52_i_fu_1614_p2 = tmp_54_fu_1580_p1 << tmp_53_fu_1574_p1;

assign tmp_53_fu_1574_p1 = F2_2_reg_2537[7:0];

assign tmp_53_i_fu_1627_p2 = (($signed(F2_reg_2523) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_54_fu_1580_p1 = p_Val2_s_fu_1569_p3[7:0];

assign tmp_54_i_fu_1632_p2 = ($signed(12'd4095) + $signed(F2_reg_2523));

assign tmp_55_fu_1517_p4 = {{F2_2_fu_1497_p3[11:3]}};

assign tmp_55_i_fu_1664_p1 = qb_fu_1649_p3;

assign tmp_56_fu_1594_p1 = tmp_49_i_fu_1588_p2[7:0];

assign tmp_57_fu_1598_p3 = p_Val2_1_fu_1533_p1[32'd31];

assign tmp_57_i_fu_1811_p2 = (($signed(pos1_fu_1785_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_59_fu_1674_p3 = p_Val2_4_fu_1668_p2[32'd7];

assign tmp_59_i_fu_1831_p1 = $unsigned(pos1_cast_i_fu_1790_p1);

assign tmp_60_i_fu_1835_p2 = $signed(p_Val2_s_fu_1569_p3) >>> tmp_59_i_fu_1831_p1;

assign tmp_61_fu_1817_p3 = pos1_fu_1785_p2[32'd11];

assign tmp_62_i_fu_1871_p2 = (($signed(pos2_fu_1794_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_62_i_not_fu_1961_p2 = (tmp_62_i_fu_1871_p2 ^ 1'd1);

assign tmp_63_cast_i_fu_1637_p1 = tmp_54_i_fu_1632_p2;

assign tmp_63_fu_1857_p3 = pos2_fu_1794_p2[32'd11];

assign tmp_63_i_fu_1883_p1 = $unsigned(pos2_cast_i_fu_1799_p1);

assign tmp_64_fu_1309_p1 = deltaTmp_to_int_fu_1295_p1[22:0];

assign tmp_64_i_fu_1925_p2 = ((Range2_V_1_fu_1887_p2 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_65_fu_1327_p1 = deltaMax_to_int_fu_1313_p1[22:0];

assign tmp_66_i_fu_1943_p2 = ((pos2_fu_1794_p2 == 12'd54) ? 1'b1 : 1'b0);

assign tmp_67_i_fu_2025_p2 = (1'd1 ^ Range1_all_ones_2_i_fu_2019_p2);

assign tmp_6_fu_786_p1 = p_src_data_stream_V_dout;

assign tmp_7_fu_1190_p1 = addr_win_val_V_load_s_fu_1182_p3;

assign tmp_8_fu_701_p1 = i1_reg_430;

assign tmp_9_fu_792_p2 = ((p_src_data_stream_V_dout == addr_win_val_0_V_1_fu_268) ? 1'b1 : 1'b0);

assign tmp_V_4_fu_1537_p4 = {{p_Val2_1_fu_1533_p1[30:23]}};

assign tmp_V_5_fu_1547_p1 = p_Val2_1_fu_1533_p1[22:0];

assign tmp_demorgan_i_fu_1563_p2 = (tmp_i_i_i_i_fu_1551_p2 & tmp_i_i_i_i_20_fu_1557_p2);

assign tmp_i_fu_1447_p1 = exp_tmp_V_fu_1437_p4;

assign tmp_i_i_i_i_20_fu_1557_p2 = ((tmp_V_5_fu_1547_p1 != 23'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_fu_1551_p2 = ((tmp_V_4_fu_1537_p4 == 8'd255) ? 1'b1 : 1'b0);

assign tmp_s_fu_1204_p0 = p_src_rows_V;

assign tmp_s_fu_1204_p1 = p_src_cols_V;

assign tmp_s_fu_1204_p2 = ($signed(tmp_s_fu_1204_p0) * $signed(tmp_s_fu_1204_p1));

assign underflow_fu_2053_p3 = ((sel_tmp47_i_fu_2048_p2[0:0] === 1'b1) ? tmp_67_i_fu_2025_p2 : sel_tmp46_i_fu_2043_p2);

assign underflow_not_i_fu_2072_p2 = (underflow_fu_2053_p3 ^ 1'd1);

assign val_V_fu_2158_p3 = ((sel_tmp56_i_fu_2152_p2[0:0] === 1'b1) ? p_Val2_11_0_i_i_mux_fu_2096_p3 : sel_tmp52_i_fu_2133_p3);

always @ (posedge ap_clk) begin
    tmp_13_reg_2362[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter1_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter2_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter7_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter8_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter9_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter10_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter11_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_13_reg_2362_pp2_iter12_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    j_5_cast8_reg_2382[31:9] <= 23'b00000000000000000000000;
    j_5_cast_reg_2387[9] <= 1'b0;
    tmp_18_reg_2477[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_18_reg_2477_pp4_iter1_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_18_reg_2477_pp4_iter2_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_18_reg_2477_pp4_iter3_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_18_reg_2477_pp4_iter4_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_18_reg_2477_pp4_iter5_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_18_reg_2477_pp4_iter6_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_18_reg_2477_pp4_iter7_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    p_Result_8_reg_2507[53:52] <= 2'b01;
end

endmodule //threshold
